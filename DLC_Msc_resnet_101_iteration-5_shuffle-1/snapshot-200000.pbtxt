node {
  name: "Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "img_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
        tensor_content: ")\\\367B\331\216\351B\305\340\317B"
      }
    }
  }
}
node {
  name: "sub"
  op: "Sub"
  input: "Placeholder"
  input: "img_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\003\000\000\000\003\000\000\000\003\000\000\000\003\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/Pad"
  op: "Pad"
  input: "sub"
  input: "resnet_v1_101/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000\003\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.13299275934696198
      }
    }
  }
}
node {
  name: "resnet_v1_101/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/conv1/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/conv1/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/conv1/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 7
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/conv1/weights"
    }
  }
}
node {
  name: "resnet_v1_101/conv1/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/conv1/weights"
}
node {
  name: "resnet_v1_101/conv1/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/conv1/weights"
  input: "resnet_v1_101/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/conv1/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/Pad"
  input: "resnet_v1_101/conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/conv1/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/conv1/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/conv1/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/conv1/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/conv1/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/conv1/BatchNorm/gamma"
  input: "resnet_v1_101/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/conv1/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/conv1/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/conv1/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/conv1/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/conv1/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/conv1/BatchNorm/beta"
  input: "resnet_v1_101/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/conv1/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/conv1/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/conv1/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/conv1/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/conv1/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/conv1/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_101/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/conv1/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/conv1/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/conv1/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/conv1/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/conv1/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_101/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/conv1/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/conv1/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/conv1/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/conv1/Conv2D"
  input: "resnet_v1_101/conv1/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/conv1/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_101/conv1/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/pool1/MaxPool"
  op: "MaxPool"
  input: "resnet_v1_101/conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20155644416809082
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/weights"
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/weights"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/pool1/MaxPool"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/Conv2D"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20155644416809082
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/weights"
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/weights"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/pool1/MaxPool"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06718548387289047
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/weights"
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/weights"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20155644416809082
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/weights"
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/weights"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/add"
  op: "AddV2"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNormV3"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_1/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10077822208404541
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/weights"
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/weights"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/Relu"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06718548387289047
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/weights"
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/weights"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20155644416809082
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/weights"
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/weights"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/add"
  op: "AddV2"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/Relu"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_2/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/shortcut/MaxPool"
  op: "MaxPool"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10077822208404541
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/weights"
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/weights"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/Relu"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/Pad"
  op: "Pad"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06718548387289047
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/weights"
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/weights"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/Pad"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20155644416809082
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/weights"
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/weights"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/add"
  op: "AddV2"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/shortcut/MaxPool"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block1/unit_3/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10077822208404541
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/weights"
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/weights"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/Relu"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/Conv2D"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10077822208404541
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/weights"
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/weights"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/Relu"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.047507308423519135
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/weights"
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/weights"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.142521932721138
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/weights"
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/weights"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/add"
  op: "AddV2"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNormV3"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_1/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.071260966360569
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/weights"
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/weights"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/Relu"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.047507308423519135
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/weights"
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/weights"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.142521932721138
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/weights"
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/weights"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/add"
  op: "AddV2"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/Relu"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_2/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.071260966360569
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/weights"
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/weights"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/Relu"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.047507308423519135
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/weights"
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/weights"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.142521932721138
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/weights"
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/weights"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/add"
  op: "AddV2"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/Relu"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_3/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/shortcut/MaxPool"
  op: "MaxPool"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.071260966360569
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/weights"
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/weights"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/Relu"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/Pad"
  op: "Pad"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.047507308423519135
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/weights"
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/weights"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/Pad"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.142521932721138
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/weights"
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/weights"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/add"
  op: "AddV2"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/shortcut/MaxPool"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block2/unit_4/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.071260966360569
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/weights"
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/weights"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/Relu"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/Conv2D"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.071260966360569
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/weights"
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/weights"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/Relu"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.033592741936445236
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/weights"
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/weights"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10077822208404541
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/weights"
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/weights"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/add"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_1/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.050389111042022705
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/weights"
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/weights"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/Relu"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.033592741936445236
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/weights"
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/weights"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10077822208404541
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/weights"
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/weights"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/add"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/Relu"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_2/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.050389111042022705
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/weights"
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/weights"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/Relu"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.033592741936445236
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/weights"
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/weights"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10077822208404541
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/weights"
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/weights"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/add"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/Relu"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_3/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.050389111042022705
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/weights"
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/weights"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/Relu"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.033592741936445236
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/weights"
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/weights"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10077822208404541
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/weights"
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/weights"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/add"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/Relu"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_4/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.050389111042022705
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/weights"
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/weights"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/Relu"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.033592741936445236
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/weights"
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/weights"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10077822208404541
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/weights"
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/weights"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/add"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/Relu"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_5/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.050389111042022705
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/weights"
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/weights"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/Relu"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.033592741936445236
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/weights"
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/weights"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10077822208404541
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/weights"
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/weights"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/add"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/Relu"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_6/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.050389111042022705
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/weights"
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/weights"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/Relu"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.033592741936445236
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/weights"
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/weights"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10077822208404541
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/weights"
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/weights"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/add"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/Relu"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_7/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.050389111042022705
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/weights"
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/weights"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/Relu"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.033592741936445236
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/weights"
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/weights"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10077822208404541
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/weights"
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/weights"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/add"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/Relu"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_8/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.050389111042022705
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/weights"
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/weights"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/Relu"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.033592741936445236
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/weights"
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/weights"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10077822208404541
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/weights"
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/weights"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/add"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/Relu"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_9/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.050389111042022705
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/weights"
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/weights"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/Relu"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.033592741936445236
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/weights"
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/weights"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10077822208404541
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/weights"
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/weights"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/add"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/Relu"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_10/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.050389111042022705
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/weights"
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/weights"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/Relu"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.033592741936445236
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/weights"
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/weights"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10077822208404541
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/weights"
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/weights"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/add"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/Relu"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_11/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.050389111042022705
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/weights"
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/weights"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/Relu"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.033592741936445236
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/weights"
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/weights"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10077822208404541
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/weights"
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/weights"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/add"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/Relu"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_12/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.050389111042022705
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/weights"
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/weights"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/Relu"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.033592741936445236
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/weights"
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/weights"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10077822208404541
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/weights"
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/weights"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/add"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/Relu"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_13/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.050389111042022705
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/weights"
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/weights"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/Relu"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.033592741936445236
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/weights"
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/weights"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10077822208404541
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/weights"
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/weights"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/add"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/Relu"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_14/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.050389111042022705
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/weights"
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/weights"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/Relu"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.033592741936445236
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/weights"
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/weights"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10077822208404541
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/weights"
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/weights"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/add"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/Relu"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_15/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.050389111042022705
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/weights"
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/weights"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/Relu"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.033592741936445236
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/weights"
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/weights"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10077822208404541
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/weights"
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/weights"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/add"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/Relu"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_16/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.050389111042022705
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/weights"
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/weights"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/Relu"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.033592741936445236
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/weights"
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/weights"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10077822208404541
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/weights"
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/weights"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/add"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/Relu"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_17/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.050389111042022705
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/weights"
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/weights"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/Relu"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.033592741936445236
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/weights"
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/weights"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10077822208404541
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/weights"
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/weights"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/add"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/Relu"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_18/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.050389111042022705
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/weights"
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/weights"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/Relu"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.033592741936445236
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/weights"
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/weights"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10077822208404541
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/weights"
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/weights"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/add"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/Relu"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_19/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.050389111042022705
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/weights"
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/weights"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/Relu"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.033592741936445236
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/weights"
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/weights"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10077822208404541
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/weights"
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/weights"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/add"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/Relu"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_20/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.050389111042022705
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/weights"
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/weights"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/Relu"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.033592741936445236
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/weights"
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/weights"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10077822208404541
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/weights"
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/weights"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/add"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/Relu"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_21/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.050389111042022705
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/weights"
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/weights"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/Relu"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.033592741936445236
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/weights"
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/weights"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10077822208404541
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/weights"
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/weights"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/add"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/Relu"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_22/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.050389111042022705
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/weights"
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/weights"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/Relu"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.033592741936445236
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/weights"
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/weights"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10077822208404541
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/weights"
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/weights"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/add"
  op: "AddV2"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/Relu"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block3/unit_23/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.050389111042022705
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/weights"
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/weights"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/Relu"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/Conv2D"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.050389111042022705
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/weights"
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/weights"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/Relu"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.023753654211759567
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/weights"
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/weights"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/filter_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\002\000\000\000\002\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/Shape"
  op: "Shape"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/strided_slice"
  op: "StridedSlice"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/Shape"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/strided_slice/stack"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/strided_slice/stack_1"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/strided_slice_1"
  op: "StridedSlice"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/Shape"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/strided_slice_1/stack"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/strided_slice_1/stack_1"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/stack_1"
  op: "Pack"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/strided_slice"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/strided_slice_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice"
  op: "StridedSlice"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/stack"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice/stack"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice/stack_1"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_1"
  op: "StridedSlice"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/stack"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_1/stack"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_1/stack_1"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/add"
  op: "AddV2"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/stack_1"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/add_1"
  op: "AddV2"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/add"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/mod"
  op: "FloorMod"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/add_1"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/dilation_rate"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/sub"
  op: "Sub"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/dilation_rate"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/mod"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/mod_1"
  op: "FloorMod"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/sub"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/dilation_rate"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/add_2"
  op: "AddV2"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_1"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/mod_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_2"
  op: "StridedSlice"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_2/stack"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_2/stack_1"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_3"
  op: "StridedSlice"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/add_2"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_3/stack"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_3/stack_1"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_4/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_4/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_4/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_4"
  op: "StridedSlice"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_4/stack"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_4/stack_1"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_5/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_5/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_5/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_5"
  op: "StridedSlice"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/add_2"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_5/stack"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_5/stack_1"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_5/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/paddings/0"
  op: "Pack"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_2"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/paddings/1"
  op: "Pack"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_4"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_5"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/paddings"
  op: "Pack"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/paddings/0"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/paddings/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_6/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_6/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_6/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_6"
  op: "StridedSlice"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/mod_1"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_6/stack"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_6/stack_1"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_6/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_7/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_7/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_7/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_7"
  op: "StridedSlice"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/mod_1"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_7/stack"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_7/stack_1"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_7/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/crops/0/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/crops/0"
  op: "Pack"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/crops/0/0"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_6"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/crops/1/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/crops/1"
  op: "Pack"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/crops/1/0"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_7"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/crops"
  op: "Pack"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/crops/0"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/crops/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/strided_slice_2"
  op: "StridedSlice"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/paddings"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/strided_slice_2/stack"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/strided_slice_2/stack_1"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/concat/concat_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/concat/concat"
  op: "Identity"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/strided_slice_3"
  op: "StridedSlice"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/crops"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/strided_slice_3/stack"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/strided_slice_3/stack_1"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/concat_1/concat_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/concat_1/concat"
  op: "Identity"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/strided_slice_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/SpaceToBatchND/block_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/SpaceToBatchND"
  op: "SpaceToBatchND"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/SpaceToBatchND/block_shape"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/concat/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/SpaceToBatchND"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/BatchToSpaceND/block_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/BatchToSpaceND"
  op: "BatchToSpaceND"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/BatchToSpaceND/block_shape"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/concat_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tcrops"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Conv2D/BatchToSpaceND"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.071260966360569
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/weights"
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/weights"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/add"
  op: "AddV2"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNormV3"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_1/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\010\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0356304831802845
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 2048
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/weights"
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/weights"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/Relu"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.023753654211759567
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/weights"
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/weights"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/filter_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\002\000\000\000\002\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/Shape"
  op: "Shape"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/strided_slice"
  op: "StridedSlice"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/Shape"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/strided_slice/stack"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/strided_slice/stack_1"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/strided_slice_1"
  op: "StridedSlice"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/Shape"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/strided_slice_1/stack"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/strided_slice_1/stack_1"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/stack_1"
  op: "Pack"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/strided_slice"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/strided_slice_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice"
  op: "StridedSlice"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/stack"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice/stack"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice/stack_1"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_1"
  op: "StridedSlice"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/stack"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_1/stack"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_1/stack_1"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/add"
  op: "AddV2"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/stack_1"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/add_1"
  op: "AddV2"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/add"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/mod"
  op: "FloorMod"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/add_1"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/dilation_rate"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/sub"
  op: "Sub"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/dilation_rate"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/mod"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/mod_1"
  op: "FloorMod"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/sub"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/dilation_rate"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/add_2"
  op: "AddV2"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_1"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/mod_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_2"
  op: "StridedSlice"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_2/stack"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_2/stack_1"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_3"
  op: "StridedSlice"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/add_2"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_3/stack"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_3/stack_1"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_4/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_4/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_4/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_4"
  op: "StridedSlice"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_4/stack"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_4/stack_1"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_5/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_5/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_5/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_5"
  op: "StridedSlice"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/add_2"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_5/stack"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_5/stack_1"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_5/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/paddings/0"
  op: "Pack"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_2"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/paddings/1"
  op: "Pack"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_4"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_5"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/paddings"
  op: "Pack"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/paddings/0"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/paddings/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_6/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_6/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_6/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_6"
  op: "StridedSlice"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/mod_1"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_6/stack"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_6/stack_1"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_6/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_7/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_7/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_7/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_7"
  op: "StridedSlice"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/mod_1"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_7/stack"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_7/stack_1"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_7/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/crops/0/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/crops/0"
  op: "Pack"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/crops/0/0"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_6"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/crops/1/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/crops/1"
  op: "Pack"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/crops/1/0"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_7"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/crops"
  op: "Pack"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/crops/0"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/crops/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/strided_slice_2"
  op: "StridedSlice"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/paddings"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/strided_slice_2/stack"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/strided_slice_2/stack_1"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/concat/concat_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/concat/concat"
  op: "Identity"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/strided_slice_3"
  op: "StridedSlice"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/crops"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/strided_slice_3/stack"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/strided_slice_3/stack_1"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/concat_1/concat_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/concat_1/concat"
  op: "Identity"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/strided_slice_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/SpaceToBatchND/block_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/SpaceToBatchND"
  op: "SpaceToBatchND"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/SpaceToBatchND/block_shape"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/concat/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/SpaceToBatchND"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/BatchToSpaceND/block_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/BatchToSpaceND"
  op: "BatchToSpaceND"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/BatchToSpaceND/block_shape"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/concat_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tcrops"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Conv2D/BatchToSpaceND"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.071260966360569
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/weights"
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/weights"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/add"
  op: "AddV2"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/Relu"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_2/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\010\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0356304831802845
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 2048
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/weights"
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/weights"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/Relu"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.023753654211759567
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/weights"
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/weights"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/filter_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\002\000\000\000\002\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/Shape"
  op: "Shape"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/strided_slice"
  op: "StridedSlice"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/Shape"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/strided_slice/stack"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/strided_slice/stack_1"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/strided_slice_1"
  op: "StridedSlice"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/Shape"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/strided_slice_1/stack"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/strided_slice_1/stack_1"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/stack_1"
  op: "Pack"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/strided_slice"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/strided_slice_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice"
  op: "StridedSlice"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/stack"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice/stack"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice/stack_1"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_1"
  op: "StridedSlice"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/stack"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_1/stack"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_1/stack_1"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/add"
  op: "AddV2"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/stack_1"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/add_1"
  op: "AddV2"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/add"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/mod"
  op: "FloorMod"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/add_1"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/dilation_rate"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/sub"
  op: "Sub"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/dilation_rate"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/mod"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/mod_1"
  op: "FloorMod"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/sub"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/dilation_rate"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/add_2"
  op: "AddV2"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_1"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/mod_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_2"
  op: "StridedSlice"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_2/stack"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_2/stack_1"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_3"
  op: "StridedSlice"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/add_2"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_3/stack"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_3/stack_1"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_4/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_4/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_4/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_4"
  op: "StridedSlice"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_4/stack"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_4/stack_1"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_5/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_5/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_5/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_5"
  op: "StridedSlice"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/add_2"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_5/stack"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_5/stack_1"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_5/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/paddings/0"
  op: "Pack"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_2"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/paddings/1"
  op: "Pack"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_4"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_5"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/paddings"
  op: "Pack"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/paddings/0"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/paddings/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_6/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_6/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_6/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_6"
  op: "StridedSlice"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/mod_1"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_6/stack"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_6/stack_1"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_6/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_7/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_7/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_7/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_7"
  op: "StridedSlice"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/mod_1"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_7/stack"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_7/stack_1"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_7/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/crops/0/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/crops/0"
  op: "Pack"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/crops/0/0"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_6"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/crops/1/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/crops/1"
  op: "Pack"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/crops/1/0"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/strided_slice_7"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/crops"
  op: "Pack"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/crops/0"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/crops/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/strided_slice_2"
  op: "StridedSlice"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/paddings"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/strided_slice_2/stack"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/strided_slice_2/stack_1"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/concat/concat_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/concat/concat"
  op: "Identity"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/strided_slice_3"
  op: "StridedSlice"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/required_space_to_batch_paddings/crops"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/strided_slice_3/stack"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/strided_slice_3/stack_1"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/concat_1/concat_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/concat_1/concat"
  op: "Identity"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/strided_slice_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/SpaceToBatchND/block_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/SpaceToBatchND"
  op: "SpaceToBatchND"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/SpaceToBatchND/block_shape"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/concat/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/SpaceToBatchND"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/BatchToSpaceND/block_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/BatchToSpaceND"
  op: "BatchToSpaceND"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/BatchToSpaceND/block_shape"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/concat_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tcrops"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Conv2D/BatchToSpaceND"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.071260966360569
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "AddV2"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/weights"
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/weights"
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/weights/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/weights"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/ReadVariableOp_1"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3/ReadVariableOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "exponential_avg_factor"
    value {
      f: 1.0
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/add"
  op: "AddV2"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/Relu"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_101/block4/unit_3/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pose/part_pred/block4/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/part_pred/block4/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\014\000\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "pose/part_pred/block4/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/part_pred/block4/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.017989568412303925
      }
    }
  }
}
node {
  name: "pose/part_pred/block4/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/part_pred/block4/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.017989568412303925
      }
    }
  }
}
node {
  name: "pose/part_pred/block4/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "pose/part_pred/block4/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/part_pred/block4/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "pose/part_pred/block4/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "pose/part_pred/block4/weights/Initializer/random_uniform/max"
  input: "pose/part_pred/block4/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/part_pred/block4/weights"
      }
    }
  }
}
node {
  name: "pose/part_pred/block4/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "pose/part_pred/block4/weights/Initializer/random_uniform/RandomUniform"
  input: "pose/part_pred/block4/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/part_pred/block4/weights"
      }
    }
  }
}
node {
  name: "pose/part_pred/block4/weights/Initializer/random_uniform"
  op: "AddV2"
  input: "pose/part_pred/block4/weights/Initializer/random_uniform/mul"
  input: "pose/part_pred/block4/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/part_pred/block4/weights"
      }
    }
  }
}
node {
  name: "pose/part_pred/block4/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/part_pred/block4/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 12
        }
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "pose/part_pred/block4/weights"
    }
  }
}
node {
  name: "pose/part_pred/block4/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "pose/part_pred/block4/weights"
}
node {
  name: "pose/part_pred/block4/weights/Assign"
  op: "AssignVariableOp"
  input: "pose/part_pred/block4/weights"
  input: "pose/part_pred/block4/weights/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pose/part_pred/block4/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "pose/part_pred/block4/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pose/part_pred/block4/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "pose/part_pred/block4/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "pose/part_pred/block4/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pose/part_pred/block4/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "pose/part_pred/block4/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pose/part_pred/block4/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "pose/part_pred/block4/kernel/Regularizer/l2_regularizer/scale"
  input: "pose/part_pred/block4/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pose/part_pred/block4/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/part_pred/block4/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 12
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "pose/part_pred/block4/biases"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/part_pred/block4/biases"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 12
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "pose/part_pred/block4/biases"
    }
  }
}
node {
  name: "pose/part_pred/block4/biases/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "pose/part_pred/block4/biases"
}
node {
  name: "pose/part_pred/block4/biases/Assign"
  op: "AssignVariableOp"
  input: "pose/part_pred/block4/biases"
  input: "pose/part_pred/block4/biases/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pose/part_pred/block4/biases/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "pose/part_pred/block4/biases"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pose/part_pred/block4/Shape"
  op: "Shape"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "pose/part_pred/block4/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "pose/part_pred/block4/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "pose/part_pred/block4/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "pose/part_pred/block4/strided_slice"
  op: "StridedSlice"
  input: "pose/part_pred/block4/Shape"
  input: "pose/part_pred/block4/strided_slice/stack"
  input: "pose/part_pred/block4/strided_slice/stack_1"
  input: "pose/part_pred/block4/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "pose/part_pred/block4/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "pose/part_pred/block4/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "pose/part_pred/block4/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "pose/part_pred/block4/strided_slice_1"
  op: "StridedSlice"
  input: "pose/part_pred/block4/Shape"
  input: "pose/part_pred/block4/strided_slice_1/stack"
  input: "pose/part_pred/block4/strided_slice_1/stack_1"
  input: "pose/part_pred/block4/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "pose/part_pred/block4/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "pose/part_pred/block4/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "pose/part_pred/block4/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "pose/part_pred/block4/strided_slice_2"
  op: "StridedSlice"
  input: "pose/part_pred/block4/Shape"
  input: "pose/part_pred/block4/strided_slice_2/stack"
  input: "pose/part_pred/block4/strided_slice_2/stack_1"
  input: "pose/part_pred/block4/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "pose/part_pred/block4/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "pose/part_pred/block4/mul"
  op: "Mul"
  input: "pose/part_pred/block4/strided_slice_1"
  input: "pose/part_pred/block4/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "pose/part_pred/block4/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "pose/part_pred/block4/mul_1"
  op: "Mul"
  input: "pose/part_pred/block4/strided_slice_2"
  input: "pose/part_pred/block4/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "pose/part_pred/block4/stack/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "pose/part_pred/block4/stack"
  op: "Pack"
  input: "pose/part_pred/block4/strided_slice"
  input: "pose/part_pred/block4/mul"
  input: "pose/part_pred/block4/mul_1"
  input: "pose/part_pred/block4/stack/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "pose/part_pred/block4/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "pose/part_pred/block4/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "pose/part_pred/block4/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "pose/part_pred/block4/strided_slice_3"
  op: "StridedSlice"
  input: "pose/part_pred/block4/stack"
  input: "pose/part_pred/block4/strided_slice_3/stack"
  input: "pose/part_pred/block4/strided_slice_3/stack_1"
  input: "pose/part_pred/block4/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "pose/part_pred/block4/conv2d_transpose/ReadVariableOp"
  op: "ReadVariableOp"
  input: "pose/part_pred/block4/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pose/part_pred/block4/conv2d_transpose"
  op: "Conv2DBackpropInput"
  input: "pose/part_pred/block4/stack"
  input: "pose/part_pred/block4/conv2d_transpose/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "pose/part_pred/block4/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "pose/part_pred/block4/biases"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pose/part_pred/block4/BiasAdd"
  op: "BiasAdd"
  input: "pose/part_pred/block4/conv2d_transpose"
  input: "pose/part_pred/block4/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "pose/locref_pred/block4/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/locref_pred/block4/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\030\000\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "pose/locref_pred/block4/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/locref_pred/block4/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.017937399446964264
      }
    }
  }
}
node {
  name: "pose/locref_pred/block4/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/locref_pred/block4/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.017937399446964264
      }
    }
  }
}
node {
  name: "pose/locref_pred/block4/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "pose/locref_pred/block4/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/locref_pred/block4/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "pose/locref_pred/block4/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "pose/locref_pred/block4/weights/Initializer/random_uniform/max"
  input: "pose/locref_pred/block4/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/locref_pred/block4/weights"
      }
    }
  }
}
node {
  name: "pose/locref_pred/block4/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "pose/locref_pred/block4/weights/Initializer/random_uniform/RandomUniform"
  input: "pose/locref_pred/block4/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/locref_pred/block4/weights"
      }
    }
  }
}
node {
  name: "pose/locref_pred/block4/weights/Initializer/random_uniform"
  op: "AddV2"
  input: "pose/locref_pred/block4/weights/Initializer/random_uniform/mul"
  input: "pose/locref_pred/block4/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/locref_pred/block4/weights"
      }
    }
  }
}
node {
  name: "pose/locref_pred/block4/weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/locref_pred/block4/weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 24
        }
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "pose/locref_pred/block4/weights"
    }
  }
}
node {
  name: "pose/locref_pred/block4/weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "pose/locref_pred/block4/weights"
}
node {
  name: "pose/locref_pred/block4/weights/Assign"
  op: "AssignVariableOp"
  input: "pose/locref_pred/block4/weights"
  input: "pose/locref_pred/block4/weights/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pose/locref_pred/block4/weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "pose/locref_pred/block4/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pose/locref_pred/block4/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "pose/locref_pred/block4/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  op: "ReadVariableOp"
  input: "pose/locref_pred/block4/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pose/locref_pred/block4/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "pose/locref_pred/block4/kernel/Regularizer/l2_regularizer/L2Loss/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pose/locref_pred/block4/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "pose/locref_pred/block4/kernel/Regularizer/l2_regularizer/scale"
  input: "pose/locref_pred/block4/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pose/locref_pred/block4/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/locref_pred/block4/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "pose/locref_pred/block4/biases"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/locref_pred/block4/biases"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "pose/locref_pred/block4/biases"
    }
  }
}
node {
  name: "pose/locref_pred/block4/biases/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "pose/locref_pred/block4/biases"
}
node {
  name: "pose/locref_pred/block4/biases/Assign"
  op: "AssignVariableOp"
  input: "pose/locref_pred/block4/biases"
  input: "pose/locref_pred/block4/biases/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pose/locref_pred/block4/biases/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "pose/locref_pred/block4/biases"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pose/locref_pred/block4/Shape"
  op: "Shape"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "pose/locref_pred/block4/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "pose/locref_pred/block4/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "pose/locref_pred/block4/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "pose/locref_pred/block4/strided_slice"
  op: "StridedSlice"
  input: "pose/locref_pred/block4/Shape"
  input: "pose/locref_pred/block4/strided_slice/stack"
  input: "pose/locref_pred/block4/strided_slice/stack_1"
  input: "pose/locref_pred/block4/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "pose/locref_pred/block4/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "pose/locref_pred/block4/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "pose/locref_pred/block4/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "pose/locref_pred/block4/strided_slice_1"
  op: "StridedSlice"
  input: "pose/locref_pred/block4/Shape"
  input: "pose/locref_pred/block4/strided_slice_1/stack"
  input: "pose/locref_pred/block4/strided_slice_1/stack_1"
  input: "pose/locref_pred/block4/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "pose/locref_pred/block4/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "pose/locref_pred/block4/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "pose/locref_pred/block4/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "pose/locref_pred/block4/strided_slice_2"
  op: "StridedSlice"
  input: "pose/locref_pred/block4/Shape"
  input: "pose/locref_pred/block4/strided_slice_2/stack"
  input: "pose/locref_pred/block4/strided_slice_2/stack_1"
  input: "pose/locref_pred/block4/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "pose/locref_pred/block4/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "pose/locref_pred/block4/mul"
  op: "Mul"
  input: "pose/locref_pred/block4/strided_slice_1"
  input: "pose/locref_pred/block4/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "pose/locref_pred/block4/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "pose/locref_pred/block4/mul_1"
  op: "Mul"
  input: "pose/locref_pred/block4/strided_slice_2"
  input: "pose/locref_pred/block4/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "pose/locref_pred/block4/stack/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 24
      }
    }
  }
}
node {
  name: "pose/locref_pred/block4/stack"
  op: "Pack"
  input: "pose/locref_pred/block4/strided_slice"
  input: "pose/locref_pred/block4/mul"
  input: "pose/locref_pred/block4/mul_1"
  input: "pose/locref_pred/block4/stack/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "pose/locref_pred/block4/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "pose/locref_pred/block4/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "pose/locref_pred/block4/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "pose/locref_pred/block4/strided_slice_3"
  op: "StridedSlice"
  input: "pose/locref_pred/block4/stack"
  input: "pose/locref_pred/block4/strided_slice_3/stack"
  input: "pose/locref_pred/block4/strided_slice_3/stack_1"
  input: "pose/locref_pred/block4/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "pose/locref_pred/block4/conv2d_transpose/ReadVariableOp"
  op: "ReadVariableOp"
  input: "pose/locref_pred/block4/weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pose/locref_pred/block4/conv2d_transpose"
  op: "Conv2DBackpropInput"
  input: "pose/locref_pred/block4/stack"
  input: "pose/locref_pred/block4/conv2d_transpose/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "pose/locref_pred/block4/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "pose/locref_pred/block4/biases"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pose/locref_pred/block4/BiasAdd"
  op: "BiasAdd"
  input: "pose/locref_pred/block4/conv2d_transpose"
  input: "pose/locref_pred/block4/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Sigmoid"
  op: "Sigmoid"
  input: "pose/part_pred/block4/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Shape"
  op: "Shape"
  input: "Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice"
  op: "StridedSlice"
  input: "Shape"
  input: "strided_slice/stack"
  input: "strided_slice/stack_1"
  input: "strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_1"
  op: "StridedSlice"
  input: "Shape"
  input: "strided_slice_1/stack"
  input: "strided_slice_1/stack_1"
  input: "strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_2"
  op: "StridedSlice"
  input: "Shape"
  input: "strided_slice_2/stack"
  input: "strided_slice_2/stack_1"
  input: "strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "strided_slice_3/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_3"
  op: "StridedSlice"
  input: "Shape"
  input: "strided_slice_3/stack"
  input: "strided_slice_3/stack_1"
  input: "strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Reshape/shape/4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Reshape/shape"
  op: "Pack"
  input: "strided_slice"
  input: "strided_slice_1"
  input: "strided_slice_2"
  input: "strided_slice_3"
  input: "Reshape/shape/4"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Reshape"
  op: "Reshape"
  input: "pose/locref_pred/block4/BiasAdd"
  input: "Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "transpose/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\000\000\000\000\003\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "transpose"
  op: "Transpose"
  input: "Reshape"
  input: "transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "transpose_1/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\000\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "transpose_1"
  op: "Transpose"
  input: "Sigmoid"
  input: "transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Shape_1"
  op: "Shape"
  input: "transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "strided_slice_4/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "strided_slice_4/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_4/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_4"
  op: "StridedSlice"
  input: "Shape_1"
  input: "strided_slice_4/stack"
  input: "strided_slice_4/stack_1"
  input: "strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "strided_slice_5/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_5/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "strided_slice_5/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_5"
  op: "StridedSlice"
  input: "Shape_1"
  input: "strided_slice_5/stack"
  input: "strided_slice_5/stack_1"
  input: "strided_slice_5/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "mul"
  op: "Mul"
  input: "strided_slice_4"
  input: "strided_slice_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reshape_1/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Reshape_1/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Reshape_1/shape"
  op: "Pack"
  input: "mul"
  input: "Reshape_1/shape/1"
  input: "Reshape_1/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Reshape_1"
  op: "Reshape"
  input: "transpose"
  input: "Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "strided_slice_6/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "strided_slice_6/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_6/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_6"
  op: "StridedSlice"
  input: "Shape_1"
  input: "strided_slice_6/stack"
  input: "strided_slice_6/stack_1"
  input: "strided_slice_6/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "strided_slice_7/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_7/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "strided_slice_7/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_7"
  op: "StridedSlice"
  input: "Shape_1"
  input: "strided_slice_7/stack"
  input: "strided_slice_7/stack_1"
  input: "strided_slice_7/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "mul_1"
  op: "Mul"
  input: "strided_slice_6"
  input: "strided_slice_7"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Reshape_2/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Reshape_2/shape"
  op: "Pack"
  input: "mul_1"
  input: "Reshape_2/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Reshape_2"
  op: "Reshape"
  input: "transpose_1"
  input: "Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ArgMax/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "ArgMax"
  op: "ArgMax"
  input: "Reshape_2"
  input: "ArgMax/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "strided_slice_8/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "strided_slice_8/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_8/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_8"
  op: "StridedSlice"
  input: "Shape_1"
  input: "strided_slice_8/stack"
  input: "strided_slice_8/stack_1"
  input: "strided_slice_8/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Cast"
  op: "Cast"
  input: "strided_slice_8"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "strided_slice_9/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_9/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "strided_slice_9/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_9"
  op: "StridedSlice"
  input: "Shape_1"
  input: "strided_slice_9/stack"
  input: "strided_slice_9/stack_1"
  input: "strided_slice_9/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "Cast_1"
  op: "Cast"
  input: "strided_slice_9"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "UnravelIndex/dims"
  op: "Pack"
  input: "Cast"
  input: "Cast_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "UnravelIndex"
  op: "UnravelIndex"
  input: "ArgMax"
  input: "UnravelIndex/dims"
  attr {
    key: "Tidx"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "Reshape_3"
  op: "Reshape"
  input: "ArgMax"
  input: "Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "strided_slice_10/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "strided_slice_10/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "strided_slice_10/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_10"
  op: "StridedSlice"
  input: "Shape_1"
  input: "strided_slice_10/stack"
  input: "strided_slice_10/stack_1"
  input: "strided_slice_10/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "strided_slice_11/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "strided_slice_11/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "strided_slice_11/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice_11"
  op: "StridedSlice"
  input: "Shape_1"
  input: "strided_slice_11/stack"
  input: "strided_slice_11/stack_1"
  input: "strided_slice_11/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "mul_2"
  op: "Mul"
  input: "strided_slice_10"
  input: "strided_slice_11"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Cast_2"
  op: "Cast"
  input: "mul_2"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "range/Cast"
  op: "Cast"
  input: "range/start"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "range/Cast_1"
  op: "Cast"
  input: "range/delta"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "range"
  op: "Range"
  input: "range/Cast"
  input: "Cast_2"
  input: "range/Cast_1"
  attr {
    key: "Tidx"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Reshape_4/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "Reshape_4"
  op: "Reshape"
  input: "range"
  input: "Reshape_4/shape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "Reshape_3"
  input: "Reshape_4"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "transpose_2/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "transpose_2"
  op: "Transpose"
  input: "concat"
  input: "transpose_2/perm"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "GatherNd"
  op: "GatherNd"
  input: "Reshape_1"
  input: "transpose_2"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "GatherV2/indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "GatherV2/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "GatherV2"
  op: "GatherV2"
  input: "GatherNd"
  input: "GatherV2/indices"
  input: "GatherV2/axis"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "GatherNd_1"
  op: "GatherNd"
  input: "Reshape_2"
  input: "transpose_2"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reshape_5/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape_5"
  op: "Reshape"
  input: "GatherNd_1"
  input: "Reshape_5/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "transpose_3/perm"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "transpose_3"
  op: "Transpose"
  input: "UnravelIndex"
  input: "transpose_3/perm"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Cast_3"
  op: "Cast"
  input: "transpose_3"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "mul_3/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 8.0
      }
    }
  }
}
node {
  name: "mul_3"
  op: "Mul"
  input: "mul_3/x"
  input: "Cast_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 4.0
      }
    }
  }
}
node {
  name: "add"
  op: "AddV2"
  input: "mul_3"
  input: "add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_4/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 7.280099868774414
      }
    }
  }
}
node {
  name: "mul_4"
  op: "Mul"
  input: "GatherV2"
  input: "mul_4/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_1"
  op: "AddV2"
  input: "add"
  input: "mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "concat_1"
  op: "ConcatV2"
  input: "add_1"
  input: "Reshape_5"
  input: "concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "save/filename/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/filename"
  op: "PlaceholderWithDefault"
  input: "save/filename/input"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/Const"
  op: "PlaceholderWithDefault"
  input: "save/filename"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 524
          }
        }
        string_val: "pose/locref_pred/block4/biases"
        string_val: "pose/locref_pred/block4/weights"
        string_val: "pose/part_pred/block4/biases"
        string_val: "pose/part_pred/block4/weights"
        string_val: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
        string_val: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
        string_val: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/weights"
        string_val: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
        string_val: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
        string_val: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/weights"
        string_val: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/weights"
        string_val: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
        string_val: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
        string_val: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/weights"
        string_val: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/conv1/weights"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 524
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "pose/locref_pred/block4/biases/Read/ReadVariableOp"
  input: "pose/locref_pred/block4/weights/Read/ReadVariableOp"
  input: "pose/part_pred/block4/biases/Read/ReadVariableOp"
  input: "pose/part_pred/block4/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/weights/Read/ReadVariableOp"
  input: "resnet_v1_101/conv1/BatchNorm/beta/Read/ReadVariableOp"
  input: "resnet_v1_101/conv1/BatchNorm/gamma/Read/ReadVariableOp"
  input: "resnet_v1_101/conv1/BatchNorm/moving_mean/Read/ReadVariableOp"
  input: "resnet_v1_101/conv1/BatchNorm/moving_variance/Read/ReadVariableOp"
  input: "resnet_v1_101/conv1/weights/Read/ReadVariableOp"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 524
          }
        }
        string_val: "pose/locref_pred/block4/biases"
        string_val: "pose/locref_pred/block4/weights"
        string_val: "pose/part_pred/block4/biases"
        string_val: "pose/part_pred/block4/weights"
        string_val: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
        string_val: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
        string_val: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/weights"
        string_val: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
        string_val: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
        string_val: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/weights"
        string_val: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/weights"
        string_val: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
        string_val: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
        string_val: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/weights"
        string_val: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_101/conv1/BatchNorm/beta"
        string_val: "resnet_v1_101/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_101/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_101/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_101/conv1/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 524
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Identity"
  op: "Identity"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp"
  op: "AssignVariableOp"
  input: "pose/locref_pred/block4/biases"
  input: "save/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_1"
  op: "Identity"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "pose/locref_pred/block4/weights"
  input: "save/Identity_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_2"
  op: "Identity"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "pose/part_pred/block4/biases"
  input: "save/Identity_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_3"
  op: "Identity"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "pose/part_pred/block4/weights"
  input: "save/Identity_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_4"
  op: "Identity"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_4"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/Identity_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_5"
  op: "Identity"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_5"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/Identity_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_6"
  op: "Identity"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_6"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/Identity_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_7"
  op: "Identity"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_7"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/Identity_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_8"
  op: "Identity"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_8"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/weights"
  input: "save/Identity_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_9"
  op: "Identity"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_9"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/Identity_9"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_10"
  op: "Identity"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_10"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/Identity_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_11"
  op: "Identity"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_11"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/Identity_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_12"
  op: "Identity"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_12"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/Identity_12"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_13"
  op: "Identity"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_13"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/weights"
  input: "save/Identity_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_14"
  op: "Identity"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_14"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/Identity_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_15"
  op: "Identity"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_15"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/Identity_15"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_16"
  op: "Identity"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_16"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/Identity_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_17"
  op: "Identity"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_17"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/Identity_17"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_18"
  op: "Identity"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_18"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/weights"
  input: "save/Identity_18"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_19"
  op: "Identity"
  input: "save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_19"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  input: "save/Identity_19"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_20"
  op: "Identity"
  input: "save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_20"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  input: "save/Identity_20"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_21"
  op: "Identity"
  input: "save/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_21"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  input: "save/Identity_21"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_22"
  op: "Identity"
  input: "save/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_22"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  input: "save/Identity_22"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_23"
  op: "Identity"
  input: "save/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_23"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/weights"
  input: "save/Identity_23"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_24"
  op: "Identity"
  input: "save/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_24"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/Identity_24"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_25"
  op: "Identity"
  input: "save/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_25"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/Identity_25"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_26"
  op: "Identity"
  input: "save/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_26"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/Identity_26"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_27"
  op: "Identity"
  input: "save/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_27"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/Identity_27"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_28"
  op: "Identity"
  input: "save/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_28"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/weights"
  input: "save/Identity_28"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_29"
  op: "Identity"
  input: "save/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_29"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/Identity_29"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_30"
  op: "Identity"
  input: "save/RestoreV2:30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_30"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/Identity_30"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_31"
  op: "Identity"
  input: "save/RestoreV2:31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_31"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/Identity_31"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_32"
  op: "Identity"
  input: "save/RestoreV2:32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_32"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/Identity_32"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_33"
  op: "Identity"
  input: "save/RestoreV2:33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_33"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/weights"
  input: "save/Identity_33"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_34"
  op: "Identity"
  input: "save/RestoreV2:34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_34"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/Identity_34"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_35"
  op: "Identity"
  input: "save/RestoreV2:35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_35"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/Identity_35"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_36"
  op: "Identity"
  input: "save/RestoreV2:36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_36"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/Identity_36"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_37"
  op: "Identity"
  input: "save/RestoreV2:37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_37"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/Identity_37"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_38"
  op: "Identity"
  input: "save/RestoreV2:38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_38"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/weights"
  input: "save/Identity_38"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_39"
  op: "Identity"
  input: "save/RestoreV2:39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_39"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/Identity_39"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_40"
  op: "Identity"
  input: "save/RestoreV2:40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_40"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/Identity_40"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_41"
  op: "Identity"
  input: "save/RestoreV2:41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_41"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/Identity_41"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_42"
  op: "Identity"
  input: "save/RestoreV2:42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_42"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/Identity_42"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_43"
  op: "Identity"
  input: "save/RestoreV2:43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_43"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/weights"
  input: "save/Identity_43"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_44"
  op: "Identity"
  input: "save/RestoreV2:44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_44"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/Identity_44"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_45"
  op: "Identity"
  input: "save/RestoreV2:45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_45"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/Identity_45"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_46"
  op: "Identity"
  input: "save/RestoreV2:46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_46"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/Identity_46"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_47"
  op: "Identity"
  input: "save/RestoreV2:47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_47"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/Identity_47"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_48"
  op: "Identity"
  input: "save/RestoreV2:48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_48"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/weights"
  input: "save/Identity_48"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_49"
  op: "Identity"
  input: "save/RestoreV2:49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_49"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/Identity_49"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_50"
  op: "Identity"
  input: "save/RestoreV2:50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_50"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/Identity_50"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_51"
  op: "Identity"
  input: "save/RestoreV2:51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_51"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/Identity_51"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_52"
  op: "Identity"
  input: "save/RestoreV2:52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_52"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/Identity_52"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_53"
  op: "Identity"
  input: "save/RestoreV2:53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_53"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/weights"
  input: "save/Identity_53"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_54"
  op: "Identity"
  input: "save/RestoreV2:54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_54"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/Identity_54"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_55"
  op: "Identity"
  input: "save/RestoreV2:55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_55"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/Identity_55"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_56"
  op: "Identity"
  input: "save/RestoreV2:56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_56"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/Identity_56"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_57"
  op: "Identity"
  input: "save/RestoreV2:57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_57"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/Identity_57"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_58"
  op: "Identity"
  input: "save/RestoreV2:58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_58"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/weights"
  input: "save/Identity_58"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_59"
  op: "Identity"
  input: "save/RestoreV2:59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_59"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/Identity_59"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_60"
  op: "Identity"
  input: "save/RestoreV2:60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_60"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/Identity_60"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_61"
  op: "Identity"
  input: "save/RestoreV2:61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_61"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/Identity_61"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_62"
  op: "Identity"
  input: "save/RestoreV2:62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_62"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/Identity_62"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_63"
  op: "Identity"
  input: "save/RestoreV2:63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_63"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/weights"
  input: "save/Identity_63"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_64"
  op: "Identity"
  input: "save/RestoreV2:64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_64"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/Identity_64"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_65"
  op: "Identity"
  input: "save/RestoreV2:65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_65"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/Identity_65"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_66"
  op: "Identity"
  input: "save/RestoreV2:66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_66"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/Identity_66"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_67"
  op: "Identity"
  input: "save/RestoreV2:67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_67"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/Identity_67"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_68"
  op: "Identity"
  input: "save/RestoreV2:68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_68"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/weights"
  input: "save/Identity_68"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_69"
  op: "Identity"
  input: "save/RestoreV2:69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_69"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  input: "save/Identity_69"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_70"
  op: "Identity"
  input: "save/RestoreV2:70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_70"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  input: "save/Identity_70"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_71"
  op: "Identity"
  input: "save/RestoreV2:71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_71"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  input: "save/Identity_71"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_72"
  op: "Identity"
  input: "save/RestoreV2:72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_72"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  input: "save/Identity_72"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_73"
  op: "Identity"
  input: "save/RestoreV2:73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_73"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/weights"
  input: "save/Identity_73"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_74"
  op: "Identity"
  input: "save/RestoreV2:74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_74"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/Identity_74"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_75"
  op: "Identity"
  input: "save/RestoreV2:75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_75"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/Identity_75"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_76"
  op: "Identity"
  input: "save/RestoreV2:76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_76"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/Identity_76"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_77"
  op: "Identity"
  input: "save/RestoreV2:77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_77"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/Identity_77"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_78"
  op: "Identity"
  input: "save/RestoreV2:78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_78"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/weights"
  input: "save/Identity_78"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_79"
  op: "Identity"
  input: "save/RestoreV2:79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_79"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/Identity_79"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_80"
  op: "Identity"
  input: "save/RestoreV2:80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_80"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/Identity_80"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_81"
  op: "Identity"
  input: "save/RestoreV2:81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_81"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/Identity_81"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_82"
  op: "Identity"
  input: "save/RestoreV2:82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_82"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/Identity_82"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_83"
  op: "Identity"
  input: "save/RestoreV2:83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_83"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/weights"
  input: "save/Identity_83"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_84"
  op: "Identity"
  input: "save/RestoreV2:84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_84"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/Identity_84"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_85"
  op: "Identity"
  input: "save/RestoreV2:85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_85"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/Identity_85"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_86"
  op: "Identity"
  input: "save/RestoreV2:86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_86"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/Identity_86"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_87"
  op: "Identity"
  input: "save/RestoreV2:87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_87"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/Identity_87"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_88"
  op: "Identity"
  input: "save/RestoreV2:88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_88"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/weights"
  input: "save/Identity_88"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_89"
  op: "Identity"
  input: "save/RestoreV2:89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_89"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/Identity_89"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_90"
  op: "Identity"
  input: "save/RestoreV2:90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_90"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/Identity_90"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_91"
  op: "Identity"
  input: "save/RestoreV2:91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_91"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/Identity_91"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_92"
  op: "Identity"
  input: "save/RestoreV2:92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_92"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/Identity_92"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_93"
  op: "Identity"
  input: "save/RestoreV2:93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_93"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/weights"
  input: "save/Identity_93"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_94"
  op: "Identity"
  input: "save/RestoreV2:94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_94"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/Identity_94"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_95"
  op: "Identity"
  input: "save/RestoreV2:95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_95"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/Identity_95"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_96"
  op: "Identity"
  input: "save/RestoreV2:96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_96"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/Identity_96"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_97"
  op: "Identity"
  input: "save/RestoreV2:97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_97"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/Identity_97"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_98"
  op: "Identity"
  input: "save/RestoreV2:98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_98"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/weights"
  input: "save/Identity_98"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_99"
  op: "Identity"
  input: "save/RestoreV2:99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_99"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/Identity_99"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_100"
  op: "Identity"
  input: "save/RestoreV2:100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_100"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/Identity_100"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_101"
  op: "Identity"
  input: "save/RestoreV2:101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_101"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/Identity_101"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_102"
  op: "Identity"
  input: "save/RestoreV2:102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_102"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/Identity_102"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_103"
  op: "Identity"
  input: "save/RestoreV2:103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_103"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/weights"
  input: "save/Identity_103"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_104"
  op: "Identity"
  input: "save/RestoreV2:104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_104"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/Identity_104"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_105"
  op: "Identity"
  input: "save/RestoreV2:105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_105"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/Identity_105"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_106"
  op: "Identity"
  input: "save/RestoreV2:106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_106"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/Identity_106"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_107"
  op: "Identity"
  input: "save/RestoreV2:107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_107"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/Identity_107"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_108"
  op: "Identity"
  input: "save/RestoreV2:108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_108"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/weights"
  input: "save/Identity_108"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_109"
  op: "Identity"
  input: "save/RestoreV2:109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_109"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/Identity_109"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_110"
  op: "Identity"
  input: "save/RestoreV2:110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_110"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/Identity_110"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_111"
  op: "Identity"
  input: "save/RestoreV2:111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_111"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/Identity_111"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_112"
  op: "Identity"
  input: "save/RestoreV2:112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_112"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/Identity_112"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_113"
  op: "Identity"
  input: "save/RestoreV2:113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_113"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/weights"
  input: "save/Identity_113"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_114"
  op: "Identity"
  input: "save/RestoreV2:114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_114"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/Identity_114"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_115"
  op: "Identity"
  input: "save/RestoreV2:115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_115"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/Identity_115"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_116"
  op: "Identity"
  input: "save/RestoreV2:116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_116"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/Identity_116"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_117"
  op: "Identity"
  input: "save/RestoreV2:117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_117"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/Identity_117"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_118"
  op: "Identity"
  input: "save/RestoreV2:118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_118"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/weights"
  input: "save/Identity_118"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_119"
  op: "Identity"
  input: "save/RestoreV2:119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_119"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/Identity_119"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_120"
  op: "Identity"
  input: "save/RestoreV2:120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_120"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/Identity_120"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_121"
  op: "Identity"
  input: "save/RestoreV2:121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_121"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/Identity_121"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_122"
  op: "Identity"
  input: "save/RestoreV2:122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_122"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/Identity_122"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_123"
  op: "Identity"
  input: "save/RestoreV2:123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_123"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/weights"
  input: "save/Identity_123"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_124"
  op: "Identity"
  input: "save/RestoreV2:124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_124"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/Identity_124"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_125"
  op: "Identity"
  input: "save/RestoreV2:125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_125"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/Identity_125"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_126"
  op: "Identity"
  input: "save/RestoreV2:126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_126"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/Identity_126"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_127"
  op: "Identity"
  input: "save/RestoreV2:127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_127"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/Identity_127"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_128"
  op: "Identity"
  input: "save/RestoreV2:128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_128"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/weights"
  input: "save/Identity_128"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_129"
  op: "Identity"
  input: "save/RestoreV2:129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_129"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/Identity_129"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_130"
  op: "Identity"
  input: "save/RestoreV2:130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_130"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/Identity_130"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_131"
  op: "Identity"
  input: "save/RestoreV2:131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_131"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/Identity_131"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_132"
  op: "Identity"
  input: "save/RestoreV2:132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_132"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/Identity_132"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_133"
  op: "Identity"
  input: "save/RestoreV2:133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_133"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/weights"
  input: "save/Identity_133"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_134"
  op: "Identity"
  input: "save/RestoreV2:134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_134"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  input: "save/Identity_134"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_135"
  op: "Identity"
  input: "save/RestoreV2:135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_135"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  input: "save/Identity_135"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_136"
  op: "Identity"
  input: "save/RestoreV2:136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_136"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  input: "save/Identity_136"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_137"
  op: "Identity"
  input: "save/RestoreV2:137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_137"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  input: "save/Identity_137"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_138"
  op: "Identity"
  input: "save/RestoreV2:138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_138"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/weights"
  input: "save/Identity_138"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_139"
  op: "Identity"
  input: "save/RestoreV2:139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_139"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/Identity_139"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_140"
  op: "Identity"
  input: "save/RestoreV2:140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_140"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/Identity_140"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_141"
  op: "Identity"
  input: "save/RestoreV2:141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_141"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/Identity_141"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_142"
  op: "Identity"
  input: "save/RestoreV2:142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_142"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/Identity_142"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_143"
  op: "Identity"
  input: "save/RestoreV2:143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_143"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/weights"
  input: "save/Identity_143"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_144"
  op: "Identity"
  input: "save/RestoreV2:144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_144"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/Identity_144"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_145"
  op: "Identity"
  input: "save/RestoreV2:145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_145"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/Identity_145"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_146"
  op: "Identity"
  input: "save/RestoreV2:146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_146"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/Identity_146"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_147"
  op: "Identity"
  input: "save/RestoreV2:147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_147"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/Identity_147"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_148"
  op: "Identity"
  input: "save/RestoreV2:148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_148"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/weights"
  input: "save/Identity_148"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_149"
  op: "Identity"
  input: "save/RestoreV2:149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_149"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/Identity_149"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_150"
  op: "Identity"
  input: "save/RestoreV2:150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_150"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/Identity_150"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_151"
  op: "Identity"
  input: "save/RestoreV2:151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_151"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/Identity_151"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_152"
  op: "Identity"
  input: "save/RestoreV2:152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_152"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/Identity_152"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_153"
  op: "Identity"
  input: "save/RestoreV2:153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_153"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/weights"
  input: "save/Identity_153"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_154"
  op: "Identity"
  input: "save/RestoreV2:154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_154"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/Identity_154"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_155"
  op: "Identity"
  input: "save/RestoreV2:155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_155"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/Identity_155"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_156"
  op: "Identity"
  input: "save/RestoreV2:156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_156"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/Identity_156"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_157"
  op: "Identity"
  input: "save/RestoreV2:157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_157"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/Identity_157"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_158"
  op: "Identity"
  input: "save/RestoreV2:158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_158"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/weights"
  input: "save/Identity_158"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_159"
  op: "Identity"
  input: "save/RestoreV2:159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_159"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/Identity_159"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_160"
  op: "Identity"
  input: "save/RestoreV2:160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_160"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/Identity_160"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_161"
  op: "Identity"
  input: "save/RestoreV2:161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_161"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/Identity_161"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_162"
  op: "Identity"
  input: "save/RestoreV2:162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_162"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/Identity_162"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_163"
  op: "Identity"
  input: "save/RestoreV2:163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_163"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/weights"
  input: "save/Identity_163"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_164"
  op: "Identity"
  input: "save/RestoreV2:164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_164"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/Identity_164"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_165"
  op: "Identity"
  input: "save/RestoreV2:165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_165"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/Identity_165"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_166"
  op: "Identity"
  input: "save/RestoreV2:166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_166"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/Identity_166"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_167"
  op: "Identity"
  input: "save/RestoreV2:167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_167"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/Identity_167"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_168"
  op: "Identity"
  input: "save/RestoreV2:168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_168"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/weights"
  input: "save/Identity_168"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_169"
  op: "Identity"
  input: "save/RestoreV2:169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_169"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/Identity_169"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_170"
  op: "Identity"
  input: "save/RestoreV2:170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_170"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/Identity_170"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_171"
  op: "Identity"
  input: "save/RestoreV2:171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_171"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/Identity_171"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_172"
  op: "Identity"
  input: "save/RestoreV2:172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_172"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/Identity_172"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_173"
  op: "Identity"
  input: "save/RestoreV2:173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_173"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/weights"
  input: "save/Identity_173"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_174"
  op: "Identity"
  input: "save/RestoreV2:174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_174"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/Identity_174"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_175"
  op: "Identity"
  input: "save/RestoreV2:175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_175"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/Identity_175"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_176"
  op: "Identity"
  input: "save/RestoreV2:176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_176"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/Identity_176"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_177"
  op: "Identity"
  input: "save/RestoreV2:177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_177"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/Identity_177"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_178"
  op: "Identity"
  input: "save/RestoreV2:178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_178"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/weights"
  input: "save/Identity_178"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_179"
  op: "Identity"
  input: "save/RestoreV2:179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_179"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/Identity_179"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_180"
  op: "Identity"
  input: "save/RestoreV2:180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_180"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/Identity_180"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_181"
  op: "Identity"
  input: "save/RestoreV2:181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_181"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/Identity_181"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_182"
  op: "Identity"
  input: "save/RestoreV2:182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_182"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/Identity_182"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_183"
  op: "Identity"
  input: "save/RestoreV2:183"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_183"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/weights"
  input: "save/Identity_183"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_184"
  op: "Identity"
  input: "save/RestoreV2:184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_184"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/Identity_184"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_185"
  op: "Identity"
  input: "save/RestoreV2:185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_185"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/Identity_185"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_186"
  op: "Identity"
  input: "save/RestoreV2:186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_186"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/Identity_186"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_187"
  op: "Identity"
  input: "save/RestoreV2:187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_187"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/Identity_187"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_188"
  op: "Identity"
  input: "save/RestoreV2:188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_188"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/weights"
  input: "save/Identity_188"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_189"
  op: "Identity"
  input: "save/RestoreV2:189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_189"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/Identity_189"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_190"
  op: "Identity"
  input: "save/RestoreV2:190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_190"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/Identity_190"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_191"
  op: "Identity"
  input: "save/RestoreV2:191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_191"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/Identity_191"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_192"
  op: "Identity"
  input: "save/RestoreV2:192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_192"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/Identity_192"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_193"
  op: "Identity"
  input: "save/RestoreV2:193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_193"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/weights"
  input: "save/Identity_193"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_194"
  op: "Identity"
  input: "save/RestoreV2:194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_194"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/Identity_194"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_195"
  op: "Identity"
  input: "save/RestoreV2:195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_195"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/Identity_195"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_196"
  op: "Identity"
  input: "save/RestoreV2:196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_196"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/Identity_196"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_197"
  op: "Identity"
  input: "save/RestoreV2:197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_197"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/Identity_197"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_198"
  op: "Identity"
  input: "save/RestoreV2:198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_198"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/weights"
  input: "save/Identity_198"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_199"
  op: "Identity"
  input: "save/RestoreV2:199"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_199"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/Identity_199"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_200"
  op: "Identity"
  input: "save/RestoreV2:200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_200"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/Identity_200"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_201"
  op: "Identity"
  input: "save/RestoreV2:201"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_201"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/Identity_201"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_202"
  op: "Identity"
  input: "save/RestoreV2:202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_202"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/Identity_202"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_203"
  op: "Identity"
  input: "save/RestoreV2:203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_203"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/weights"
  input: "save/Identity_203"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_204"
  op: "Identity"
  input: "save/RestoreV2:204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_204"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/Identity_204"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_205"
  op: "Identity"
  input: "save/RestoreV2:205"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_205"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/Identity_205"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_206"
  op: "Identity"
  input: "save/RestoreV2:206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_206"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/Identity_206"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_207"
  op: "Identity"
  input: "save/RestoreV2:207"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_207"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/Identity_207"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_208"
  op: "Identity"
  input: "save/RestoreV2:208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_208"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/weights"
  input: "save/Identity_208"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_209"
  op: "Identity"
  input: "save/RestoreV2:209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_209"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/Identity_209"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_210"
  op: "Identity"
  input: "save/RestoreV2:210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_210"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/Identity_210"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_211"
  op: "Identity"
  input: "save/RestoreV2:211"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_211"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/Identity_211"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_212"
  op: "Identity"
  input: "save/RestoreV2:212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_212"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/Identity_212"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_213"
  op: "Identity"
  input: "save/RestoreV2:213"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_213"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/weights"
  input: "save/Identity_213"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_214"
  op: "Identity"
  input: "save/RestoreV2:214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_214"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/Identity_214"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_215"
  op: "Identity"
  input: "save/RestoreV2:215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_215"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/Identity_215"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_216"
  op: "Identity"
  input: "save/RestoreV2:216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_216"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/Identity_216"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_217"
  op: "Identity"
  input: "save/RestoreV2:217"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_217"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/Identity_217"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_218"
  op: "Identity"
  input: "save/RestoreV2:218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_218"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/weights"
  input: "save/Identity_218"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_219"
  op: "Identity"
  input: "save/RestoreV2:219"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_219"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/Identity_219"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_220"
  op: "Identity"
  input: "save/RestoreV2:220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_220"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/Identity_220"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_221"
  op: "Identity"
  input: "save/RestoreV2:221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_221"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/Identity_221"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_222"
  op: "Identity"
  input: "save/RestoreV2:222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_222"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/Identity_222"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_223"
  op: "Identity"
  input: "save/RestoreV2:223"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_223"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/weights"
  input: "save/Identity_223"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_224"
  op: "Identity"
  input: "save/RestoreV2:224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_224"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/Identity_224"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_225"
  op: "Identity"
  input: "save/RestoreV2:225"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_225"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/Identity_225"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_226"
  op: "Identity"
  input: "save/RestoreV2:226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_226"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/Identity_226"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_227"
  op: "Identity"
  input: "save/RestoreV2:227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_227"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/Identity_227"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_228"
  op: "Identity"
  input: "save/RestoreV2:228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_228"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/weights"
  input: "save/Identity_228"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_229"
  op: "Identity"
  input: "save/RestoreV2:229"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_229"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/Identity_229"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_230"
  op: "Identity"
  input: "save/RestoreV2:230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_230"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/Identity_230"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_231"
  op: "Identity"
  input: "save/RestoreV2:231"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_231"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/Identity_231"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_232"
  op: "Identity"
  input: "save/RestoreV2:232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_232"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/Identity_232"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_233"
  op: "Identity"
  input: "save/RestoreV2:233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_233"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/weights"
  input: "save/Identity_233"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_234"
  op: "Identity"
  input: "save/RestoreV2:234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_234"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/Identity_234"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_235"
  op: "Identity"
  input: "save/RestoreV2:235"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_235"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/Identity_235"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_236"
  op: "Identity"
  input: "save/RestoreV2:236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_236"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/Identity_236"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_237"
  op: "Identity"
  input: "save/RestoreV2:237"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_237"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/Identity_237"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_238"
  op: "Identity"
  input: "save/RestoreV2:238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_238"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/weights"
  input: "save/Identity_238"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_239"
  op: "Identity"
  input: "save/RestoreV2:239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_239"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/Identity_239"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_240"
  op: "Identity"
  input: "save/RestoreV2:240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_240"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/Identity_240"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_241"
  op: "Identity"
  input: "save/RestoreV2:241"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_241"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/Identity_241"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_242"
  op: "Identity"
  input: "save/RestoreV2:242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_242"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/Identity_242"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_243"
  op: "Identity"
  input: "save/RestoreV2:243"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_243"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/weights"
  input: "save/Identity_243"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_244"
  op: "Identity"
  input: "save/RestoreV2:244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_244"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/Identity_244"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_245"
  op: "Identity"
  input: "save/RestoreV2:245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_245"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/Identity_245"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_246"
  op: "Identity"
  input: "save/RestoreV2:246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_246"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/Identity_246"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_247"
  op: "Identity"
  input: "save/RestoreV2:247"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_247"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/Identity_247"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_248"
  op: "Identity"
  input: "save/RestoreV2:248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_248"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/weights"
  input: "save/Identity_248"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_249"
  op: "Identity"
  input: "save/RestoreV2:249"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_249"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/Identity_249"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_250"
  op: "Identity"
  input: "save/RestoreV2:250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_250"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/Identity_250"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_251"
  op: "Identity"
  input: "save/RestoreV2:251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_251"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/Identity_251"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_252"
  op: "Identity"
  input: "save/RestoreV2:252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_252"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/Identity_252"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_253"
  op: "Identity"
  input: "save/RestoreV2:253"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_253"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/weights"
  input: "save/Identity_253"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_254"
  op: "Identity"
  input: "save/RestoreV2:254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_254"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/Identity_254"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_255"
  op: "Identity"
  input: "save/RestoreV2:255"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_255"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/Identity_255"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_256"
  op: "Identity"
  input: "save/RestoreV2:256"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_256"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/Identity_256"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_257"
  op: "Identity"
  input: "save/RestoreV2:257"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_257"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/Identity_257"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_258"
  op: "Identity"
  input: "save/RestoreV2:258"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_258"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/weights"
  input: "save/Identity_258"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_259"
  op: "Identity"
  input: "save/RestoreV2:259"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_259"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/Identity_259"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_260"
  op: "Identity"
  input: "save/RestoreV2:260"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_260"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/Identity_260"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_261"
  op: "Identity"
  input: "save/RestoreV2:261"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_261"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/Identity_261"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_262"
  op: "Identity"
  input: "save/RestoreV2:262"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_262"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/Identity_262"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_263"
  op: "Identity"
  input: "save/RestoreV2:263"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_263"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/weights"
  input: "save/Identity_263"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_264"
  op: "Identity"
  input: "save/RestoreV2:264"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_264"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/Identity_264"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_265"
  op: "Identity"
  input: "save/RestoreV2:265"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_265"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/Identity_265"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_266"
  op: "Identity"
  input: "save/RestoreV2:266"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_266"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/Identity_266"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_267"
  op: "Identity"
  input: "save/RestoreV2:267"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_267"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/Identity_267"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_268"
  op: "Identity"
  input: "save/RestoreV2:268"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_268"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/weights"
  input: "save/Identity_268"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_269"
  op: "Identity"
  input: "save/RestoreV2:269"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_269"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/Identity_269"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_270"
  op: "Identity"
  input: "save/RestoreV2:270"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_270"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/Identity_270"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_271"
  op: "Identity"
  input: "save/RestoreV2:271"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_271"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/Identity_271"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_272"
  op: "Identity"
  input: "save/RestoreV2:272"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_272"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/Identity_272"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_273"
  op: "Identity"
  input: "save/RestoreV2:273"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_273"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/weights"
  input: "save/Identity_273"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_274"
  op: "Identity"
  input: "save/RestoreV2:274"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_274"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/Identity_274"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_275"
  op: "Identity"
  input: "save/RestoreV2:275"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_275"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/Identity_275"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_276"
  op: "Identity"
  input: "save/RestoreV2:276"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_276"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/Identity_276"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_277"
  op: "Identity"
  input: "save/RestoreV2:277"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_277"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/Identity_277"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_278"
  op: "Identity"
  input: "save/RestoreV2:278"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_278"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/weights"
  input: "save/Identity_278"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_279"
  op: "Identity"
  input: "save/RestoreV2:279"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_279"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/Identity_279"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_280"
  op: "Identity"
  input: "save/RestoreV2:280"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_280"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/Identity_280"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_281"
  op: "Identity"
  input: "save/RestoreV2:281"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_281"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/Identity_281"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_282"
  op: "Identity"
  input: "save/RestoreV2:282"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_282"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/Identity_282"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_283"
  op: "Identity"
  input: "save/RestoreV2:283"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_283"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/weights"
  input: "save/Identity_283"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_284"
  op: "Identity"
  input: "save/RestoreV2:284"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_284"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/Identity_284"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_285"
  op: "Identity"
  input: "save/RestoreV2:285"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_285"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/Identity_285"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_286"
  op: "Identity"
  input: "save/RestoreV2:286"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_286"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/Identity_286"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_287"
  op: "Identity"
  input: "save/RestoreV2:287"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_287"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/Identity_287"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_288"
  op: "Identity"
  input: "save/RestoreV2:288"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_288"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/weights"
  input: "save/Identity_288"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_289"
  op: "Identity"
  input: "save/RestoreV2:289"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_289"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/Identity_289"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_290"
  op: "Identity"
  input: "save/RestoreV2:290"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_290"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/Identity_290"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_291"
  op: "Identity"
  input: "save/RestoreV2:291"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_291"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/Identity_291"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_292"
  op: "Identity"
  input: "save/RestoreV2:292"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_292"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/Identity_292"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_293"
  op: "Identity"
  input: "save/RestoreV2:293"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_293"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/weights"
  input: "save/Identity_293"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_294"
  op: "Identity"
  input: "save/RestoreV2:294"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_294"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/Identity_294"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_295"
  op: "Identity"
  input: "save/RestoreV2:295"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_295"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/Identity_295"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_296"
  op: "Identity"
  input: "save/RestoreV2:296"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_296"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/Identity_296"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_297"
  op: "Identity"
  input: "save/RestoreV2:297"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_297"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/Identity_297"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_298"
  op: "Identity"
  input: "save/RestoreV2:298"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_298"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/weights"
  input: "save/Identity_298"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_299"
  op: "Identity"
  input: "save/RestoreV2:299"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_299"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/Identity_299"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_300"
  op: "Identity"
  input: "save/RestoreV2:300"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_300"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/Identity_300"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_301"
  op: "Identity"
  input: "save/RestoreV2:301"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_301"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/Identity_301"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_302"
  op: "Identity"
  input: "save/RestoreV2:302"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_302"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/Identity_302"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_303"
  op: "Identity"
  input: "save/RestoreV2:303"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_303"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/weights"
  input: "save/Identity_303"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_304"
  op: "Identity"
  input: "save/RestoreV2:304"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_304"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/Identity_304"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_305"
  op: "Identity"
  input: "save/RestoreV2:305"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_305"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/Identity_305"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_306"
  op: "Identity"
  input: "save/RestoreV2:306"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_306"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/Identity_306"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_307"
  op: "Identity"
  input: "save/RestoreV2:307"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_307"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/Identity_307"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_308"
  op: "Identity"
  input: "save/RestoreV2:308"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_308"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/weights"
  input: "save/Identity_308"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_309"
  op: "Identity"
  input: "save/RestoreV2:309"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_309"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/Identity_309"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_310"
  op: "Identity"
  input: "save/RestoreV2:310"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_310"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/Identity_310"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_311"
  op: "Identity"
  input: "save/RestoreV2:311"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_311"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/Identity_311"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_312"
  op: "Identity"
  input: "save/RestoreV2:312"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_312"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/Identity_312"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_313"
  op: "Identity"
  input: "save/RestoreV2:313"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_313"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/weights"
  input: "save/Identity_313"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_314"
  op: "Identity"
  input: "save/RestoreV2:314"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_314"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/Identity_314"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_315"
  op: "Identity"
  input: "save/RestoreV2:315"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_315"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/Identity_315"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_316"
  op: "Identity"
  input: "save/RestoreV2:316"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_316"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/Identity_316"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_317"
  op: "Identity"
  input: "save/RestoreV2:317"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_317"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/Identity_317"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_318"
  op: "Identity"
  input: "save/RestoreV2:318"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_318"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/weights"
  input: "save/Identity_318"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_319"
  op: "Identity"
  input: "save/RestoreV2:319"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_319"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/Identity_319"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_320"
  op: "Identity"
  input: "save/RestoreV2:320"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_320"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/Identity_320"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_321"
  op: "Identity"
  input: "save/RestoreV2:321"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_321"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/Identity_321"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_322"
  op: "Identity"
  input: "save/RestoreV2:322"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_322"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/Identity_322"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_323"
  op: "Identity"
  input: "save/RestoreV2:323"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_323"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/weights"
  input: "save/Identity_323"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_324"
  op: "Identity"
  input: "save/RestoreV2:324"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_324"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/Identity_324"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_325"
  op: "Identity"
  input: "save/RestoreV2:325"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_325"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/Identity_325"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_326"
  op: "Identity"
  input: "save/RestoreV2:326"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_326"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/Identity_326"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_327"
  op: "Identity"
  input: "save/RestoreV2:327"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_327"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/Identity_327"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_328"
  op: "Identity"
  input: "save/RestoreV2:328"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_328"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/weights"
  input: "save/Identity_328"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_329"
  op: "Identity"
  input: "save/RestoreV2:329"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_329"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/Identity_329"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_330"
  op: "Identity"
  input: "save/RestoreV2:330"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_330"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/Identity_330"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_331"
  op: "Identity"
  input: "save/RestoreV2:331"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_331"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/Identity_331"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_332"
  op: "Identity"
  input: "save/RestoreV2:332"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_332"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/Identity_332"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_333"
  op: "Identity"
  input: "save/RestoreV2:333"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_333"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/weights"
  input: "save/Identity_333"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_334"
  op: "Identity"
  input: "save/RestoreV2:334"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_334"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/Identity_334"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_335"
  op: "Identity"
  input: "save/RestoreV2:335"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_335"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/Identity_335"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_336"
  op: "Identity"
  input: "save/RestoreV2:336"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_336"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/Identity_336"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_337"
  op: "Identity"
  input: "save/RestoreV2:337"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_337"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/Identity_337"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_338"
  op: "Identity"
  input: "save/RestoreV2:338"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_338"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/weights"
  input: "save/Identity_338"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_339"
  op: "Identity"
  input: "save/RestoreV2:339"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_339"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/Identity_339"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_340"
  op: "Identity"
  input: "save/RestoreV2:340"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_340"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/Identity_340"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_341"
  op: "Identity"
  input: "save/RestoreV2:341"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_341"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/Identity_341"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_342"
  op: "Identity"
  input: "save/RestoreV2:342"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_342"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/Identity_342"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_343"
  op: "Identity"
  input: "save/RestoreV2:343"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_343"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/weights"
  input: "save/Identity_343"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_344"
  op: "Identity"
  input: "save/RestoreV2:344"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_344"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/Identity_344"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_345"
  op: "Identity"
  input: "save/RestoreV2:345"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_345"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/Identity_345"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_346"
  op: "Identity"
  input: "save/RestoreV2:346"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_346"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/Identity_346"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_347"
  op: "Identity"
  input: "save/RestoreV2:347"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_347"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/Identity_347"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_348"
  op: "Identity"
  input: "save/RestoreV2:348"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_348"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/weights"
  input: "save/Identity_348"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_349"
  op: "Identity"
  input: "save/RestoreV2:349"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_349"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/Identity_349"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_350"
  op: "Identity"
  input: "save/RestoreV2:350"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_350"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/Identity_350"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_351"
  op: "Identity"
  input: "save/RestoreV2:351"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_351"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/Identity_351"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_352"
  op: "Identity"
  input: "save/RestoreV2:352"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_352"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/Identity_352"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_353"
  op: "Identity"
  input: "save/RestoreV2:353"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_353"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/weights"
  input: "save/Identity_353"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_354"
  op: "Identity"
  input: "save/RestoreV2:354"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_354"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/Identity_354"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_355"
  op: "Identity"
  input: "save/RestoreV2:355"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_355"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/Identity_355"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_356"
  op: "Identity"
  input: "save/RestoreV2:356"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_356"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/Identity_356"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_357"
  op: "Identity"
  input: "save/RestoreV2:357"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_357"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/Identity_357"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_358"
  op: "Identity"
  input: "save/RestoreV2:358"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_358"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/weights"
  input: "save/Identity_358"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_359"
  op: "Identity"
  input: "save/RestoreV2:359"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_359"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/Identity_359"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_360"
  op: "Identity"
  input: "save/RestoreV2:360"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_360"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/Identity_360"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_361"
  op: "Identity"
  input: "save/RestoreV2:361"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_361"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/Identity_361"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_362"
  op: "Identity"
  input: "save/RestoreV2:362"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_362"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/Identity_362"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_363"
  op: "Identity"
  input: "save/RestoreV2:363"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_363"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/weights"
  input: "save/Identity_363"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_364"
  op: "Identity"
  input: "save/RestoreV2:364"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_364"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/Identity_364"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_365"
  op: "Identity"
  input: "save/RestoreV2:365"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_365"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/Identity_365"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_366"
  op: "Identity"
  input: "save/RestoreV2:366"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_366"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/Identity_366"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_367"
  op: "Identity"
  input: "save/RestoreV2:367"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_367"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/Identity_367"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_368"
  op: "Identity"
  input: "save/RestoreV2:368"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_368"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/weights"
  input: "save/Identity_368"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_369"
  op: "Identity"
  input: "save/RestoreV2:369"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_369"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/Identity_369"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_370"
  op: "Identity"
  input: "save/RestoreV2:370"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_370"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/Identity_370"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_371"
  op: "Identity"
  input: "save/RestoreV2:371"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_371"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/Identity_371"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_372"
  op: "Identity"
  input: "save/RestoreV2:372"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_372"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/Identity_372"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_373"
  op: "Identity"
  input: "save/RestoreV2:373"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_373"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/weights"
  input: "save/Identity_373"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_374"
  op: "Identity"
  input: "save/RestoreV2:374"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_374"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/Identity_374"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_375"
  op: "Identity"
  input: "save/RestoreV2:375"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_375"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/Identity_375"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_376"
  op: "Identity"
  input: "save/RestoreV2:376"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_376"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/Identity_376"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_377"
  op: "Identity"
  input: "save/RestoreV2:377"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_377"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/Identity_377"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_378"
  op: "Identity"
  input: "save/RestoreV2:378"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_378"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/weights"
  input: "save/Identity_378"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_379"
  op: "Identity"
  input: "save/RestoreV2:379"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_379"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/Identity_379"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_380"
  op: "Identity"
  input: "save/RestoreV2:380"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_380"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/Identity_380"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_381"
  op: "Identity"
  input: "save/RestoreV2:381"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_381"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/Identity_381"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_382"
  op: "Identity"
  input: "save/RestoreV2:382"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_382"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/Identity_382"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_383"
  op: "Identity"
  input: "save/RestoreV2:383"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_383"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/weights"
  input: "save/Identity_383"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_384"
  op: "Identity"
  input: "save/RestoreV2:384"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_384"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/Identity_384"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_385"
  op: "Identity"
  input: "save/RestoreV2:385"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_385"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/Identity_385"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_386"
  op: "Identity"
  input: "save/RestoreV2:386"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_386"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/Identity_386"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_387"
  op: "Identity"
  input: "save/RestoreV2:387"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_387"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/Identity_387"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_388"
  op: "Identity"
  input: "save/RestoreV2:388"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_388"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/weights"
  input: "save/Identity_388"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_389"
  op: "Identity"
  input: "save/RestoreV2:389"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_389"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/Identity_389"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_390"
  op: "Identity"
  input: "save/RestoreV2:390"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_390"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/Identity_390"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_391"
  op: "Identity"
  input: "save/RestoreV2:391"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_391"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/Identity_391"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_392"
  op: "Identity"
  input: "save/RestoreV2:392"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_392"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/Identity_392"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_393"
  op: "Identity"
  input: "save/RestoreV2:393"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_393"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/weights"
  input: "save/Identity_393"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_394"
  op: "Identity"
  input: "save/RestoreV2:394"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_394"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/Identity_394"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_395"
  op: "Identity"
  input: "save/RestoreV2:395"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_395"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/Identity_395"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_396"
  op: "Identity"
  input: "save/RestoreV2:396"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_396"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/Identity_396"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_397"
  op: "Identity"
  input: "save/RestoreV2:397"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_397"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/Identity_397"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_398"
  op: "Identity"
  input: "save/RestoreV2:398"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_398"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/weights"
  input: "save/Identity_398"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_399"
  op: "Identity"
  input: "save/RestoreV2:399"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_399"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/Identity_399"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_400"
  op: "Identity"
  input: "save/RestoreV2:400"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_400"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/Identity_400"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_401"
  op: "Identity"
  input: "save/RestoreV2:401"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_401"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/Identity_401"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_402"
  op: "Identity"
  input: "save/RestoreV2:402"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_402"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/Identity_402"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_403"
  op: "Identity"
  input: "save/RestoreV2:403"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_403"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/weights"
  input: "save/Identity_403"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_404"
  op: "Identity"
  input: "save/RestoreV2:404"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_404"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/Identity_404"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_405"
  op: "Identity"
  input: "save/RestoreV2:405"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_405"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/Identity_405"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_406"
  op: "Identity"
  input: "save/RestoreV2:406"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_406"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/Identity_406"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_407"
  op: "Identity"
  input: "save/RestoreV2:407"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_407"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/Identity_407"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_408"
  op: "Identity"
  input: "save/RestoreV2:408"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_408"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/weights"
  input: "save/Identity_408"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_409"
  op: "Identity"
  input: "save/RestoreV2:409"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_409"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/Identity_409"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_410"
  op: "Identity"
  input: "save/RestoreV2:410"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_410"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/Identity_410"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_411"
  op: "Identity"
  input: "save/RestoreV2:411"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_411"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/Identity_411"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_412"
  op: "Identity"
  input: "save/RestoreV2:412"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_412"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/Identity_412"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_413"
  op: "Identity"
  input: "save/RestoreV2:413"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_413"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/weights"
  input: "save/Identity_413"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_414"
  op: "Identity"
  input: "save/RestoreV2:414"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_414"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/Identity_414"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_415"
  op: "Identity"
  input: "save/RestoreV2:415"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_415"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/Identity_415"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_416"
  op: "Identity"
  input: "save/RestoreV2:416"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_416"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/Identity_416"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_417"
  op: "Identity"
  input: "save/RestoreV2:417"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_417"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/Identity_417"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_418"
  op: "Identity"
  input: "save/RestoreV2:418"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_418"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/weights"
  input: "save/Identity_418"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_419"
  op: "Identity"
  input: "save/RestoreV2:419"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_419"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/Identity_419"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_420"
  op: "Identity"
  input: "save/RestoreV2:420"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_420"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/Identity_420"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_421"
  op: "Identity"
  input: "save/RestoreV2:421"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_421"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/Identity_421"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_422"
  op: "Identity"
  input: "save/RestoreV2:422"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_422"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/Identity_422"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_423"
  op: "Identity"
  input: "save/RestoreV2:423"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_423"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/weights"
  input: "save/Identity_423"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_424"
  op: "Identity"
  input: "save/RestoreV2:424"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_424"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/Identity_424"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_425"
  op: "Identity"
  input: "save/RestoreV2:425"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_425"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/Identity_425"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_426"
  op: "Identity"
  input: "save/RestoreV2:426"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_426"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/Identity_426"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_427"
  op: "Identity"
  input: "save/RestoreV2:427"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_427"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/Identity_427"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_428"
  op: "Identity"
  input: "save/RestoreV2:428"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_428"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/weights"
  input: "save/Identity_428"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_429"
  op: "Identity"
  input: "save/RestoreV2:429"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_429"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/Identity_429"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_430"
  op: "Identity"
  input: "save/RestoreV2:430"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_430"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/Identity_430"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_431"
  op: "Identity"
  input: "save/RestoreV2:431"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_431"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/Identity_431"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_432"
  op: "Identity"
  input: "save/RestoreV2:432"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_432"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/Identity_432"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_433"
  op: "Identity"
  input: "save/RestoreV2:433"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_433"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/weights"
  input: "save/Identity_433"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_434"
  op: "Identity"
  input: "save/RestoreV2:434"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_434"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/Identity_434"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_435"
  op: "Identity"
  input: "save/RestoreV2:435"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_435"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/Identity_435"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_436"
  op: "Identity"
  input: "save/RestoreV2:436"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_436"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/Identity_436"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_437"
  op: "Identity"
  input: "save/RestoreV2:437"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_437"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/Identity_437"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_438"
  op: "Identity"
  input: "save/RestoreV2:438"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_438"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/weights"
  input: "save/Identity_438"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_439"
  op: "Identity"
  input: "save/RestoreV2:439"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_439"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/Identity_439"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_440"
  op: "Identity"
  input: "save/RestoreV2:440"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_440"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/Identity_440"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_441"
  op: "Identity"
  input: "save/RestoreV2:441"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_441"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/Identity_441"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_442"
  op: "Identity"
  input: "save/RestoreV2:442"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_442"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/Identity_442"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_443"
  op: "Identity"
  input: "save/RestoreV2:443"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_443"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/weights"
  input: "save/Identity_443"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_444"
  op: "Identity"
  input: "save/RestoreV2:444"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_444"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/Identity_444"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_445"
  op: "Identity"
  input: "save/RestoreV2:445"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_445"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/Identity_445"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_446"
  op: "Identity"
  input: "save/RestoreV2:446"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_446"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/Identity_446"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_447"
  op: "Identity"
  input: "save/RestoreV2:447"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_447"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/Identity_447"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_448"
  op: "Identity"
  input: "save/RestoreV2:448"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_448"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/weights"
  input: "save/Identity_448"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_449"
  op: "Identity"
  input: "save/RestoreV2:449"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_449"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/Identity_449"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_450"
  op: "Identity"
  input: "save/RestoreV2:450"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_450"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/Identity_450"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_451"
  op: "Identity"
  input: "save/RestoreV2:451"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_451"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/Identity_451"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_452"
  op: "Identity"
  input: "save/RestoreV2:452"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_452"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/Identity_452"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_453"
  op: "Identity"
  input: "save/RestoreV2:453"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_453"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/weights"
  input: "save/Identity_453"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_454"
  op: "Identity"
  input: "save/RestoreV2:454"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_454"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/Identity_454"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_455"
  op: "Identity"
  input: "save/RestoreV2:455"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_455"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/Identity_455"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_456"
  op: "Identity"
  input: "save/RestoreV2:456"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_456"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/Identity_456"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_457"
  op: "Identity"
  input: "save/RestoreV2:457"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_457"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/Identity_457"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_458"
  op: "Identity"
  input: "save/RestoreV2:458"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_458"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/weights"
  input: "save/Identity_458"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_459"
  op: "Identity"
  input: "save/RestoreV2:459"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_459"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/Identity_459"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_460"
  op: "Identity"
  input: "save/RestoreV2:460"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_460"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/Identity_460"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_461"
  op: "Identity"
  input: "save/RestoreV2:461"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_461"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/Identity_461"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_462"
  op: "Identity"
  input: "save/RestoreV2:462"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_462"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/Identity_462"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_463"
  op: "Identity"
  input: "save/RestoreV2:463"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_463"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/weights"
  input: "save/Identity_463"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_464"
  op: "Identity"
  input: "save/RestoreV2:464"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_464"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/Identity_464"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_465"
  op: "Identity"
  input: "save/RestoreV2:465"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_465"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/Identity_465"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_466"
  op: "Identity"
  input: "save/RestoreV2:466"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_466"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/Identity_466"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_467"
  op: "Identity"
  input: "save/RestoreV2:467"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_467"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/Identity_467"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_468"
  op: "Identity"
  input: "save/RestoreV2:468"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_468"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/weights"
  input: "save/Identity_468"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_469"
  op: "Identity"
  input: "save/RestoreV2:469"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_469"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/Identity_469"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_470"
  op: "Identity"
  input: "save/RestoreV2:470"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_470"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/Identity_470"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_471"
  op: "Identity"
  input: "save/RestoreV2:471"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_471"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/Identity_471"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_472"
  op: "Identity"
  input: "save/RestoreV2:472"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_472"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/Identity_472"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_473"
  op: "Identity"
  input: "save/RestoreV2:473"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_473"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/weights"
  input: "save/Identity_473"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_474"
  op: "Identity"
  input: "save/RestoreV2:474"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_474"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/Identity_474"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_475"
  op: "Identity"
  input: "save/RestoreV2:475"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_475"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/Identity_475"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_476"
  op: "Identity"
  input: "save/RestoreV2:476"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_476"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/Identity_476"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_477"
  op: "Identity"
  input: "save/RestoreV2:477"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_477"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/Identity_477"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_478"
  op: "Identity"
  input: "save/RestoreV2:478"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_478"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/weights"
  input: "save/Identity_478"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_479"
  op: "Identity"
  input: "save/RestoreV2:479"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_479"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/Identity_479"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_480"
  op: "Identity"
  input: "save/RestoreV2:480"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_480"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/Identity_480"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_481"
  op: "Identity"
  input: "save/RestoreV2:481"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_481"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/Identity_481"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_482"
  op: "Identity"
  input: "save/RestoreV2:482"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_482"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/Identity_482"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_483"
  op: "Identity"
  input: "save/RestoreV2:483"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_483"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/weights"
  input: "save/Identity_483"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_484"
  op: "Identity"
  input: "save/RestoreV2:484"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_484"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  input: "save/Identity_484"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_485"
  op: "Identity"
  input: "save/RestoreV2:485"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_485"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  input: "save/Identity_485"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_486"
  op: "Identity"
  input: "save/RestoreV2:486"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_486"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  input: "save/Identity_486"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_487"
  op: "Identity"
  input: "save/RestoreV2:487"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_487"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  input: "save/Identity_487"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_488"
  op: "Identity"
  input: "save/RestoreV2:488"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_488"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/weights"
  input: "save/Identity_488"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_489"
  op: "Identity"
  input: "save/RestoreV2:489"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_489"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/Identity_489"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_490"
  op: "Identity"
  input: "save/RestoreV2:490"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_490"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/Identity_490"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_491"
  op: "Identity"
  input: "save/RestoreV2:491"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_491"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/Identity_491"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_492"
  op: "Identity"
  input: "save/RestoreV2:492"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_492"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/Identity_492"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_493"
  op: "Identity"
  input: "save/RestoreV2:493"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_493"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/weights"
  input: "save/Identity_493"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_494"
  op: "Identity"
  input: "save/RestoreV2:494"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_494"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/Identity_494"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_495"
  op: "Identity"
  input: "save/RestoreV2:495"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_495"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/Identity_495"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_496"
  op: "Identity"
  input: "save/RestoreV2:496"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_496"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/Identity_496"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_497"
  op: "Identity"
  input: "save/RestoreV2:497"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_497"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/Identity_497"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_498"
  op: "Identity"
  input: "save/RestoreV2:498"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_498"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/weights"
  input: "save/Identity_498"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_499"
  op: "Identity"
  input: "save/RestoreV2:499"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_499"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/Identity_499"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_500"
  op: "Identity"
  input: "save/RestoreV2:500"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_500"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/Identity_500"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_501"
  op: "Identity"
  input: "save/RestoreV2:501"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_501"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/Identity_501"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_502"
  op: "Identity"
  input: "save/RestoreV2:502"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_502"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/Identity_502"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_503"
  op: "Identity"
  input: "save/RestoreV2:503"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_503"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/weights"
  input: "save/Identity_503"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_504"
  op: "Identity"
  input: "save/RestoreV2:504"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_504"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/Identity_504"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_505"
  op: "Identity"
  input: "save/RestoreV2:505"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_505"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/Identity_505"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_506"
  op: "Identity"
  input: "save/RestoreV2:506"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_506"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/Identity_506"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_507"
  op: "Identity"
  input: "save/RestoreV2:507"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_507"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/Identity_507"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_508"
  op: "Identity"
  input: "save/RestoreV2:508"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_508"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/weights"
  input: "save/Identity_508"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_509"
  op: "Identity"
  input: "save/RestoreV2:509"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_509"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/Identity_509"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_510"
  op: "Identity"
  input: "save/RestoreV2:510"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_510"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/Identity_510"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_511"
  op: "Identity"
  input: "save/RestoreV2:511"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_511"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/Identity_511"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_512"
  op: "Identity"
  input: "save/RestoreV2:512"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_512"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/Identity_512"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_513"
  op: "Identity"
  input: "save/RestoreV2:513"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_513"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/weights"
  input: "save/Identity_513"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_514"
  op: "Identity"
  input: "save/RestoreV2:514"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_514"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/Identity_514"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_515"
  op: "Identity"
  input: "save/RestoreV2:515"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_515"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/Identity_515"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_516"
  op: "Identity"
  input: "save/RestoreV2:516"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_516"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/Identity_516"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_517"
  op: "Identity"
  input: "save/RestoreV2:517"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_517"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/Identity_517"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_518"
  op: "Identity"
  input: "save/RestoreV2:518"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_518"
  op: "AssignVariableOp"
  input: "resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/weights"
  input: "save/Identity_518"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_519"
  op: "Identity"
  input: "save/RestoreV2:519"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_519"
  op: "AssignVariableOp"
  input: "resnet_v1_101/conv1/BatchNorm/beta"
  input: "save/Identity_519"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_520"
  op: "Identity"
  input: "save/RestoreV2:520"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_520"
  op: "AssignVariableOp"
  input: "resnet_v1_101/conv1/BatchNorm/gamma"
  input: "save/Identity_520"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_521"
  op: "Identity"
  input: "save/RestoreV2:521"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_521"
  op: "AssignVariableOp"
  input: "resnet_v1_101/conv1/BatchNorm/moving_mean"
  input: "save/Identity_521"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_522"
  op: "Identity"
  input: "save/RestoreV2:522"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_522"
  op: "AssignVariableOp"
  input: "resnet_v1_101/conv1/BatchNorm/moving_variance"
  input: "save/Identity_522"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_523"
  op: "Identity"
  input: "save/RestoreV2:523"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_523"
  op: "AssignVariableOp"
  input: "resnet_v1_101/conv1/weights"
  input: "save/Identity_523"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/AssignVariableOp"
  input: "^save/AssignVariableOp_1"
  input: "^save/AssignVariableOp_10"
  input: "^save/AssignVariableOp_100"
  input: "^save/AssignVariableOp_101"
  input: "^save/AssignVariableOp_102"
  input: "^save/AssignVariableOp_103"
  input: "^save/AssignVariableOp_104"
  input: "^save/AssignVariableOp_105"
  input: "^save/AssignVariableOp_106"
  input: "^save/AssignVariableOp_107"
  input: "^save/AssignVariableOp_108"
  input: "^save/AssignVariableOp_109"
  input: "^save/AssignVariableOp_11"
  input: "^save/AssignVariableOp_110"
  input: "^save/AssignVariableOp_111"
  input: "^save/AssignVariableOp_112"
  input: "^save/AssignVariableOp_113"
  input: "^save/AssignVariableOp_114"
  input: "^save/AssignVariableOp_115"
  input: "^save/AssignVariableOp_116"
  input: "^save/AssignVariableOp_117"
  input: "^save/AssignVariableOp_118"
  input: "^save/AssignVariableOp_119"
  input: "^save/AssignVariableOp_12"
  input: "^save/AssignVariableOp_120"
  input: "^save/AssignVariableOp_121"
  input: "^save/AssignVariableOp_122"
  input: "^save/AssignVariableOp_123"
  input: "^save/AssignVariableOp_124"
  input: "^save/AssignVariableOp_125"
  input: "^save/AssignVariableOp_126"
  input: "^save/AssignVariableOp_127"
  input: "^save/AssignVariableOp_128"
  input: "^save/AssignVariableOp_129"
  input: "^save/AssignVariableOp_13"
  input: "^save/AssignVariableOp_130"
  input: "^save/AssignVariableOp_131"
  input: "^save/AssignVariableOp_132"
  input: "^save/AssignVariableOp_133"
  input: "^save/AssignVariableOp_134"
  input: "^save/AssignVariableOp_135"
  input: "^save/AssignVariableOp_136"
  input: "^save/AssignVariableOp_137"
  input: "^save/AssignVariableOp_138"
  input: "^save/AssignVariableOp_139"
  input: "^save/AssignVariableOp_14"
  input: "^save/AssignVariableOp_140"
  input: "^save/AssignVariableOp_141"
  input: "^save/AssignVariableOp_142"
  input: "^save/AssignVariableOp_143"
  input: "^save/AssignVariableOp_144"
  input: "^save/AssignVariableOp_145"
  input: "^save/AssignVariableOp_146"
  input: "^save/AssignVariableOp_147"
  input: "^save/AssignVariableOp_148"
  input: "^save/AssignVariableOp_149"
  input: "^save/AssignVariableOp_15"
  input: "^save/AssignVariableOp_150"
  input: "^save/AssignVariableOp_151"
  input: "^save/AssignVariableOp_152"
  input: "^save/AssignVariableOp_153"
  input: "^save/AssignVariableOp_154"
  input: "^save/AssignVariableOp_155"
  input: "^save/AssignVariableOp_156"
  input: "^save/AssignVariableOp_157"
  input: "^save/AssignVariableOp_158"
  input: "^save/AssignVariableOp_159"
  input: "^save/AssignVariableOp_16"
  input: "^save/AssignVariableOp_160"
  input: "^save/AssignVariableOp_161"
  input: "^save/AssignVariableOp_162"
  input: "^save/AssignVariableOp_163"
  input: "^save/AssignVariableOp_164"
  input: "^save/AssignVariableOp_165"
  input: "^save/AssignVariableOp_166"
  input: "^save/AssignVariableOp_167"
  input: "^save/AssignVariableOp_168"
  input: "^save/AssignVariableOp_169"
  input: "^save/AssignVariableOp_17"
  input: "^save/AssignVariableOp_170"
  input: "^save/AssignVariableOp_171"
  input: "^save/AssignVariableOp_172"
  input: "^save/AssignVariableOp_173"
  input: "^save/AssignVariableOp_174"
  input: "^save/AssignVariableOp_175"
  input: "^save/AssignVariableOp_176"
  input: "^save/AssignVariableOp_177"
  input: "^save/AssignVariableOp_178"
  input: "^save/AssignVariableOp_179"
  input: "^save/AssignVariableOp_18"
  input: "^save/AssignVariableOp_180"
  input: "^save/AssignVariableOp_181"
  input: "^save/AssignVariableOp_182"
  input: "^save/AssignVariableOp_183"
  input: "^save/AssignVariableOp_184"
  input: "^save/AssignVariableOp_185"
  input: "^save/AssignVariableOp_186"
  input: "^save/AssignVariableOp_187"
  input: "^save/AssignVariableOp_188"
  input: "^save/AssignVariableOp_189"
  input: "^save/AssignVariableOp_19"
  input: "^save/AssignVariableOp_190"
  input: "^save/AssignVariableOp_191"
  input: "^save/AssignVariableOp_192"
  input: "^save/AssignVariableOp_193"
  input: "^save/AssignVariableOp_194"
  input: "^save/AssignVariableOp_195"
  input: "^save/AssignVariableOp_196"
  input: "^save/AssignVariableOp_197"
  input: "^save/AssignVariableOp_198"
  input: "^save/AssignVariableOp_199"
  input: "^save/AssignVariableOp_2"
  input: "^save/AssignVariableOp_20"
  input: "^save/AssignVariableOp_200"
  input: "^save/AssignVariableOp_201"
  input: "^save/AssignVariableOp_202"
  input: "^save/AssignVariableOp_203"
  input: "^save/AssignVariableOp_204"
  input: "^save/AssignVariableOp_205"
  input: "^save/AssignVariableOp_206"
  input: "^save/AssignVariableOp_207"
  input: "^save/AssignVariableOp_208"
  input: "^save/AssignVariableOp_209"
  input: "^save/AssignVariableOp_21"
  input: "^save/AssignVariableOp_210"
  input: "^save/AssignVariableOp_211"
  input: "^save/AssignVariableOp_212"
  input: "^save/AssignVariableOp_213"
  input: "^save/AssignVariableOp_214"
  input: "^save/AssignVariableOp_215"
  input: "^save/AssignVariableOp_216"
  input: "^save/AssignVariableOp_217"
  input: "^save/AssignVariableOp_218"
  input: "^save/AssignVariableOp_219"
  input: "^save/AssignVariableOp_22"
  input: "^save/AssignVariableOp_220"
  input: "^save/AssignVariableOp_221"
  input: "^save/AssignVariableOp_222"
  input: "^save/AssignVariableOp_223"
  input: "^save/AssignVariableOp_224"
  input: "^save/AssignVariableOp_225"
  input: "^save/AssignVariableOp_226"
  input: "^save/AssignVariableOp_227"
  input: "^save/AssignVariableOp_228"
  input: "^save/AssignVariableOp_229"
  input: "^save/AssignVariableOp_23"
  input: "^save/AssignVariableOp_230"
  input: "^save/AssignVariableOp_231"
  input: "^save/AssignVariableOp_232"
  input: "^save/AssignVariableOp_233"
  input: "^save/AssignVariableOp_234"
  input: "^save/AssignVariableOp_235"
  input: "^save/AssignVariableOp_236"
  input: "^save/AssignVariableOp_237"
  input: "^save/AssignVariableOp_238"
  input: "^save/AssignVariableOp_239"
  input: "^save/AssignVariableOp_24"
  input: "^save/AssignVariableOp_240"
  input: "^save/AssignVariableOp_241"
  input: "^save/AssignVariableOp_242"
  input: "^save/AssignVariableOp_243"
  input: "^save/AssignVariableOp_244"
  input: "^save/AssignVariableOp_245"
  input: "^save/AssignVariableOp_246"
  input: "^save/AssignVariableOp_247"
  input: "^save/AssignVariableOp_248"
  input: "^save/AssignVariableOp_249"
  input: "^save/AssignVariableOp_25"
  input: "^save/AssignVariableOp_250"
  input: "^save/AssignVariableOp_251"
  input: "^save/AssignVariableOp_252"
  input: "^save/AssignVariableOp_253"
  input: "^save/AssignVariableOp_254"
  input: "^save/AssignVariableOp_255"
  input: "^save/AssignVariableOp_256"
  input: "^save/AssignVariableOp_257"
  input: "^save/AssignVariableOp_258"
  input: "^save/AssignVariableOp_259"
  input: "^save/AssignVariableOp_26"
  input: "^save/AssignVariableOp_260"
  input: "^save/AssignVariableOp_261"
  input: "^save/AssignVariableOp_262"
  input: "^save/AssignVariableOp_263"
  input: "^save/AssignVariableOp_264"
  input: "^save/AssignVariableOp_265"
  input: "^save/AssignVariableOp_266"
  input: "^save/AssignVariableOp_267"
  input: "^save/AssignVariableOp_268"
  input: "^save/AssignVariableOp_269"
  input: "^save/AssignVariableOp_27"
  input: "^save/AssignVariableOp_270"
  input: "^save/AssignVariableOp_271"
  input: "^save/AssignVariableOp_272"
  input: "^save/AssignVariableOp_273"
  input: "^save/AssignVariableOp_274"
  input: "^save/AssignVariableOp_275"
  input: "^save/AssignVariableOp_276"
  input: "^save/AssignVariableOp_277"
  input: "^save/AssignVariableOp_278"
  input: "^save/AssignVariableOp_279"
  input: "^save/AssignVariableOp_28"
  input: "^save/AssignVariableOp_280"
  input: "^save/AssignVariableOp_281"
  input: "^save/AssignVariableOp_282"
  input: "^save/AssignVariableOp_283"
  input: "^save/AssignVariableOp_284"
  input: "^save/AssignVariableOp_285"
  input: "^save/AssignVariableOp_286"
  input: "^save/AssignVariableOp_287"
  input: "^save/AssignVariableOp_288"
  input: "^save/AssignVariableOp_289"
  input: "^save/AssignVariableOp_29"
  input: "^save/AssignVariableOp_290"
  input: "^save/AssignVariableOp_291"
  input: "^save/AssignVariableOp_292"
  input: "^save/AssignVariableOp_293"
  input: "^save/AssignVariableOp_294"
  input: "^save/AssignVariableOp_295"
  input: "^save/AssignVariableOp_296"
  input: "^save/AssignVariableOp_297"
  input: "^save/AssignVariableOp_298"
  input: "^save/AssignVariableOp_299"
  input: "^save/AssignVariableOp_3"
  input: "^save/AssignVariableOp_30"
  input: "^save/AssignVariableOp_300"
  input: "^save/AssignVariableOp_301"
  input: "^save/AssignVariableOp_302"
  input: "^save/AssignVariableOp_303"
  input: "^save/AssignVariableOp_304"
  input: "^save/AssignVariableOp_305"
  input: "^save/AssignVariableOp_306"
  input: "^save/AssignVariableOp_307"
  input: "^save/AssignVariableOp_308"
  input: "^save/AssignVariableOp_309"
  input: "^save/AssignVariableOp_31"
  input: "^save/AssignVariableOp_310"
  input: "^save/AssignVariableOp_311"
  input: "^save/AssignVariableOp_312"
  input: "^save/AssignVariableOp_313"
  input: "^save/AssignVariableOp_314"
  input: "^save/AssignVariableOp_315"
  input: "^save/AssignVariableOp_316"
  input: "^save/AssignVariableOp_317"
  input: "^save/AssignVariableOp_318"
  input: "^save/AssignVariableOp_319"
  input: "^save/AssignVariableOp_32"
  input: "^save/AssignVariableOp_320"
  input: "^save/AssignVariableOp_321"
  input: "^save/AssignVariableOp_322"
  input: "^save/AssignVariableOp_323"
  input: "^save/AssignVariableOp_324"
  input: "^save/AssignVariableOp_325"
  input: "^save/AssignVariableOp_326"
  input: "^save/AssignVariableOp_327"
  input: "^save/AssignVariableOp_328"
  input: "^save/AssignVariableOp_329"
  input: "^save/AssignVariableOp_33"
  input: "^save/AssignVariableOp_330"
  input: "^save/AssignVariableOp_331"
  input: "^save/AssignVariableOp_332"
  input: "^save/AssignVariableOp_333"
  input: "^save/AssignVariableOp_334"
  input: "^save/AssignVariableOp_335"
  input: "^save/AssignVariableOp_336"
  input: "^save/AssignVariableOp_337"
  input: "^save/AssignVariableOp_338"
  input: "^save/AssignVariableOp_339"
  input: "^save/AssignVariableOp_34"
  input: "^save/AssignVariableOp_340"
  input: "^save/AssignVariableOp_341"
  input: "^save/AssignVariableOp_342"
  input: "^save/AssignVariableOp_343"
  input: "^save/AssignVariableOp_344"
  input: "^save/AssignVariableOp_345"
  input: "^save/AssignVariableOp_346"
  input: "^save/AssignVariableOp_347"
  input: "^save/AssignVariableOp_348"
  input: "^save/AssignVariableOp_349"
  input: "^save/AssignVariableOp_35"
  input: "^save/AssignVariableOp_350"
  input: "^save/AssignVariableOp_351"
  input: "^save/AssignVariableOp_352"
  input: "^save/AssignVariableOp_353"
  input: "^save/AssignVariableOp_354"
  input: "^save/AssignVariableOp_355"
  input: "^save/AssignVariableOp_356"
  input: "^save/AssignVariableOp_357"
  input: "^save/AssignVariableOp_358"
  input: "^save/AssignVariableOp_359"
  input: "^save/AssignVariableOp_36"
  input: "^save/AssignVariableOp_360"
  input: "^save/AssignVariableOp_361"
  input: "^save/AssignVariableOp_362"
  input: "^save/AssignVariableOp_363"
  input: "^save/AssignVariableOp_364"
  input: "^save/AssignVariableOp_365"
  input: "^save/AssignVariableOp_366"
  input: "^save/AssignVariableOp_367"
  input: "^save/AssignVariableOp_368"
  input: "^save/AssignVariableOp_369"
  input: "^save/AssignVariableOp_37"
  input: "^save/AssignVariableOp_370"
  input: "^save/AssignVariableOp_371"
  input: "^save/AssignVariableOp_372"
  input: "^save/AssignVariableOp_373"
  input: "^save/AssignVariableOp_374"
  input: "^save/AssignVariableOp_375"
  input: "^save/AssignVariableOp_376"
  input: "^save/AssignVariableOp_377"
  input: "^save/AssignVariableOp_378"
  input: "^save/AssignVariableOp_379"
  input: "^save/AssignVariableOp_38"
  input: "^save/AssignVariableOp_380"
  input: "^save/AssignVariableOp_381"
  input: "^save/AssignVariableOp_382"
  input: "^save/AssignVariableOp_383"
  input: "^save/AssignVariableOp_384"
  input: "^save/AssignVariableOp_385"
  input: "^save/AssignVariableOp_386"
  input: "^save/AssignVariableOp_387"
  input: "^save/AssignVariableOp_388"
  input: "^save/AssignVariableOp_389"
  input: "^save/AssignVariableOp_39"
  input: "^save/AssignVariableOp_390"
  input: "^save/AssignVariableOp_391"
  input: "^save/AssignVariableOp_392"
  input: "^save/AssignVariableOp_393"
  input: "^save/AssignVariableOp_394"
  input: "^save/AssignVariableOp_395"
  input: "^save/AssignVariableOp_396"
  input: "^save/AssignVariableOp_397"
  input: "^save/AssignVariableOp_398"
  input: "^save/AssignVariableOp_399"
  input: "^save/AssignVariableOp_4"
  input: "^save/AssignVariableOp_40"
  input: "^save/AssignVariableOp_400"
  input: "^save/AssignVariableOp_401"
  input: "^save/AssignVariableOp_402"
  input: "^save/AssignVariableOp_403"
  input: "^save/AssignVariableOp_404"
  input: "^save/AssignVariableOp_405"
  input: "^save/AssignVariableOp_406"
  input: "^save/AssignVariableOp_407"
  input: "^save/AssignVariableOp_408"
  input: "^save/AssignVariableOp_409"
  input: "^save/AssignVariableOp_41"
  input: "^save/AssignVariableOp_410"
  input: "^save/AssignVariableOp_411"
  input: "^save/AssignVariableOp_412"
  input: "^save/AssignVariableOp_413"
  input: "^save/AssignVariableOp_414"
  input: "^save/AssignVariableOp_415"
  input: "^save/AssignVariableOp_416"
  input: "^save/AssignVariableOp_417"
  input: "^save/AssignVariableOp_418"
  input: "^save/AssignVariableOp_419"
  input: "^save/AssignVariableOp_42"
  input: "^save/AssignVariableOp_420"
  input: "^save/AssignVariableOp_421"
  input: "^save/AssignVariableOp_422"
  input: "^save/AssignVariableOp_423"
  input: "^save/AssignVariableOp_424"
  input: "^save/AssignVariableOp_425"
  input: "^save/AssignVariableOp_426"
  input: "^save/AssignVariableOp_427"
  input: "^save/AssignVariableOp_428"
  input: "^save/AssignVariableOp_429"
  input: "^save/AssignVariableOp_43"
  input: "^save/AssignVariableOp_430"
  input: "^save/AssignVariableOp_431"
  input: "^save/AssignVariableOp_432"
  input: "^save/AssignVariableOp_433"
  input: "^save/AssignVariableOp_434"
  input: "^save/AssignVariableOp_435"
  input: "^save/AssignVariableOp_436"
  input: "^save/AssignVariableOp_437"
  input: "^save/AssignVariableOp_438"
  input: "^save/AssignVariableOp_439"
  input: "^save/AssignVariableOp_44"
  input: "^save/AssignVariableOp_440"
  input: "^save/AssignVariableOp_441"
  input: "^save/AssignVariableOp_442"
  input: "^save/AssignVariableOp_443"
  input: "^save/AssignVariableOp_444"
  input: "^save/AssignVariableOp_445"
  input: "^save/AssignVariableOp_446"
  input: "^save/AssignVariableOp_447"
  input: "^save/AssignVariableOp_448"
  input: "^save/AssignVariableOp_449"
  input: "^save/AssignVariableOp_45"
  input: "^save/AssignVariableOp_450"
  input: "^save/AssignVariableOp_451"
  input: "^save/AssignVariableOp_452"
  input: "^save/AssignVariableOp_453"
  input: "^save/AssignVariableOp_454"
  input: "^save/AssignVariableOp_455"
  input: "^save/AssignVariableOp_456"
  input: "^save/AssignVariableOp_457"
  input: "^save/AssignVariableOp_458"
  input: "^save/AssignVariableOp_459"
  input: "^save/AssignVariableOp_46"
  input: "^save/AssignVariableOp_460"
  input: "^save/AssignVariableOp_461"
  input: "^save/AssignVariableOp_462"
  input: "^save/AssignVariableOp_463"
  input: "^save/AssignVariableOp_464"
  input: "^save/AssignVariableOp_465"
  input: "^save/AssignVariableOp_466"
  input: "^save/AssignVariableOp_467"
  input: "^save/AssignVariableOp_468"
  input: "^save/AssignVariableOp_469"
  input: "^save/AssignVariableOp_47"
  input: "^save/AssignVariableOp_470"
  input: "^save/AssignVariableOp_471"
  input: "^save/AssignVariableOp_472"
  input: "^save/AssignVariableOp_473"
  input: "^save/AssignVariableOp_474"
  input: "^save/AssignVariableOp_475"
  input: "^save/AssignVariableOp_476"
  input: "^save/AssignVariableOp_477"
  input: "^save/AssignVariableOp_478"
  input: "^save/AssignVariableOp_479"
  input: "^save/AssignVariableOp_48"
  input: "^save/AssignVariableOp_480"
  input: "^save/AssignVariableOp_481"
  input: "^save/AssignVariableOp_482"
  input: "^save/AssignVariableOp_483"
  input: "^save/AssignVariableOp_484"
  input: "^save/AssignVariableOp_485"
  input: "^save/AssignVariableOp_486"
  input: "^save/AssignVariableOp_487"
  input: "^save/AssignVariableOp_488"
  input: "^save/AssignVariableOp_489"
  input: "^save/AssignVariableOp_49"
  input: "^save/AssignVariableOp_490"
  input: "^save/AssignVariableOp_491"
  input: "^save/AssignVariableOp_492"
  input: "^save/AssignVariableOp_493"
  input: "^save/AssignVariableOp_494"
  input: "^save/AssignVariableOp_495"
  input: "^save/AssignVariableOp_496"
  input: "^save/AssignVariableOp_497"
  input: "^save/AssignVariableOp_498"
  input: "^save/AssignVariableOp_499"
  input: "^save/AssignVariableOp_5"
  input: "^save/AssignVariableOp_50"
  input: "^save/AssignVariableOp_500"
  input: "^save/AssignVariableOp_501"
  input: "^save/AssignVariableOp_502"
  input: "^save/AssignVariableOp_503"
  input: "^save/AssignVariableOp_504"
  input: "^save/AssignVariableOp_505"
  input: "^save/AssignVariableOp_506"
  input: "^save/AssignVariableOp_507"
  input: "^save/AssignVariableOp_508"
  input: "^save/AssignVariableOp_509"
  input: "^save/AssignVariableOp_51"
  input: "^save/AssignVariableOp_510"
  input: "^save/AssignVariableOp_511"
  input: "^save/AssignVariableOp_512"
  input: "^save/AssignVariableOp_513"
  input: "^save/AssignVariableOp_514"
  input: "^save/AssignVariableOp_515"
  input: "^save/AssignVariableOp_516"
  input: "^save/AssignVariableOp_517"
  input: "^save/AssignVariableOp_518"
  input: "^save/AssignVariableOp_519"
  input: "^save/AssignVariableOp_52"
  input: "^save/AssignVariableOp_520"
  input: "^save/AssignVariableOp_521"
  input: "^save/AssignVariableOp_522"
  input: "^save/AssignVariableOp_523"
  input: "^save/AssignVariableOp_53"
  input: "^save/AssignVariableOp_54"
  input: "^save/AssignVariableOp_55"
  input: "^save/AssignVariableOp_56"
  input: "^save/AssignVariableOp_57"
  input: "^save/AssignVariableOp_58"
  input: "^save/AssignVariableOp_59"
  input: "^save/AssignVariableOp_6"
  input: "^save/AssignVariableOp_60"
  input: "^save/AssignVariableOp_61"
  input: "^save/AssignVariableOp_62"
  input: "^save/AssignVariableOp_63"
  input: "^save/AssignVariableOp_64"
  input: "^save/AssignVariableOp_65"
  input: "^save/AssignVariableOp_66"
  input: "^save/AssignVariableOp_67"
  input: "^save/AssignVariableOp_68"
  input: "^save/AssignVariableOp_69"
  input: "^save/AssignVariableOp_7"
  input: "^save/AssignVariableOp_70"
  input: "^save/AssignVariableOp_71"
  input: "^save/AssignVariableOp_72"
  input: "^save/AssignVariableOp_73"
  input: "^save/AssignVariableOp_74"
  input: "^save/AssignVariableOp_75"
  input: "^save/AssignVariableOp_76"
  input: "^save/AssignVariableOp_77"
  input: "^save/AssignVariableOp_78"
  input: "^save/AssignVariableOp_79"
  input: "^save/AssignVariableOp_8"
  input: "^save/AssignVariableOp_80"
  input: "^save/AssignVariableOp_81"
  input: "^save/AssignVariableOp_82"
  input: "^save/AssignVariableOp_83"
  input: "^save/AssignVariableOp_84"
  input: "^save/AssignVariableOp_85"
  input: "^save/AssignVariableOp_86"
  input: "^save/AssignVariableOp_87"
  input: "^save/AssignVariableOp_88"
  input: "^save/AssignVariableOp_89"
  input: "^save/AssignVariableOp_9"
  input: "^save/AssignVariableOp_90"
  input: "^save/AssignVariableOp_91"
  input: "^save/AssignVariableOp_92"
  input: "^save/AssignVariableOp_93"
  input: "^save/AssignVariableOp_94"
  input: "^save/AssignVariableOp_95"
  input: "^save/AssignVariableOp_96"
  input: "^save/AssignVariableOp_97"
  input: "^save/AssignVariableOp_98"
  input: "^save/AssignVariableOp_99"
}
node {
  name: "init"
  op: "NoOp"
  input: "^pose/locref_pred/block4/biases/Assign"
  input: "^pose/locref_pred/block4/weights/Assign"
  input: "^pose/part_pred/block4/biases/Assign"
  input: "^pose/part_pred/block4/weights/Assign"
  input: "^resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block1/unit_1/bottleneck_v1/conv1/weights/Assign"
  input: "^resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block1/unit_1/bottleneck_v1/conv2/weights/Assign"
  input: "^resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block1/unit_1/bottleneck_v1/conv3/weights/Assign"
  input: "^resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block1/unit_1/bottleneck_v1/shortcut/weights/Assign"
  input: "^resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block1/unit_2/bottleneck_v1/conv1/weights/Assign"
  input: "^resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block1/unit_2/bottleneck_v1/conv2/weights/Assign"
  input: "^resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block1/unit_2/bottleneck_v1/conv3/weights/Assign"
  input: "^resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block1/unit_3/bottleneck_v1/conv1/weights/Assign"
  input: "^resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block1/unit_3/bottleneck_v1/conv2/weights/Assign"
  input: "^resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block1/unit_3/bottleneck_v1/conv3/weights/Assign"
  input: "^resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block2/unit_1/bottleneck_v1/conv1/weights/Assign"
  input: "^resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block2/unit_1/bottleneck_v1/conv2/weights/Assign"
  input: "^resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block2/unit_1/bottleneck_v1/conv3/weights/Assign"
  input: "^resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block2/unit_1/bottleneck_v1/shortcut/weights/Assign"
  input: "^resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block2/unit_2/bottleneck_v1/conv1/weights/Assign"
  input: "^resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block2/unit_2/bottleneck_v1/conv2/weights/Assign"
  input: "^resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block2/unit_2/bottleneck_v1/conv3/weights/Assign"
  input: "^resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block2/unit_3/bottleneck_v1/conv1/weights/Assign"
  input: "^resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block2/unit_3/bottleneck_v1/conv2/weights/Assign"
  input: "^resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block2/unit_3/bottleneck_v1/conv3/weights/Assign"
  input: "^resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block2/unit_4/bottleneck_v1/conv1/weights/Assign"
  input: "^resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block2/unit_4/bottleneck_v1/conv2/weights/Assign"
  input: "^resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block2/unit_4/bottleneck_v1/conv3/weights/Assign"
  input: "^resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_1/bottleneck_v1/conv1/weights/Assign"
  input: "^resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_1/bottleneck_v1/conv2/weights/Assign"
  input: "^resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_1/bottleneck_v1/conv3/weights/Assign"
  input: "^resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_1/bottleneck_v1/shortcut/weights/Assign"
  input: "^resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_10/bottleneck_v1/conv1/weights/Assign"
  input: "^resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_10/bottleneck_v1/conv2/weights/Assign"
  input: "^resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_10/bottleneck_v1/conv3/weights/Assign"
  input: "^resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_11/bottleneck_v1/conv1/weights/Assign"
  input: "^resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_11/bottleneck_v1/conv2/weights/Assign"
  input: "^resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_11/bottleneck_v1/conv3/weights/Assign"
  input: "^resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_12/bottleneck_v1/conv1/weights/Assign"
  input: "^resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_12/bottleneck_v1/conv2/weights/Assign"
  input: "^resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_12/bottleneck_v1/conv3/weights/Assign"
  input: "^resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_13/bottleneck_v1/conv1/weights/Assign"
  input: "^resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_13/bottleneck_v1/conv2/weights/Assign"
  input: "^resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_13/bottleneck_v1/conv3/weights/Assign"
  input: "^resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_14/bottleneck_v1/conv1/weights/Assign"
  input: "^resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_14/bottleneck_v1/conv2/weights/Assign"
  input: "^resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_14/bottleneck_v1/conv3/weights/Assign"
  input: "^resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_15/bottleneck_v1/conv1/weights/Assign"
  input: "^resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_15/bottleneck_v1/conv2/weights/Assign"
  input: "^resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_15/bottleneck_v1/conv3/weights/Assign"
  input: "^resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_16/bottleneck_v1/conv1/weights/Assign"
  input: "^resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_16/bottleneck_v1/conv2/weights/Assign"
  input: "^resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_16/bottleneck_v1/conv3/weights/Assign"
  input: "^resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_17/bottleneck_v1/conv1/weights/Assign"
  input: "^resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_17/bottleneck_v1/conv2/weights/Assign"
  input: "^resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_17/bottleneck_v1/conv3/weights/Assign"
  input: "^resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_18/bottleneck_v1/conv1/weights/Assign"
  input: "^resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_18/bottleneck_v1/conv2/weights/Assign"
  input: "^resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_18/bottleneck_v1/conv3/weights/Assign"
  input: "^resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_19/bottleneck_v1/conv1/weights/Assign"
  input: "^resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_19/bottleneck_v1/conv2/weights/Assign"
  input: "^resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_19/bottleneck_v1/conv3/weights/Assign"
  input: "^resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_2/bottleneck_v1/conv1/weights/Assign"
  input: "^resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_2/bottleneck_v1/conv2/weights/Assign"
  input: "^resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_2/bottleneck_v1/conv3/weights/Assign"
  input: "^resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_20/bottleneck_v1/conv1/weights/Assign"
  input: "^resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_20/bottleneck_v1/conv2/weights/Assign"
  input: "^resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_20/bottleneck_v1/conv3/weights/Assign"
  input: "^resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_21/bottleneck_v1/conv1/weights/Assign"
  input: "^resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_21/bottleneck_v1/conv2/weights/Assign"
  input: "^resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_21/bottleneck_v1/conv3/weights/Assign"
  input: "^resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_22/bottleneck_v1/conv1/weights/Assign"
  input: "^resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_22/bottleneck_v1/conv2/weights/Assign"
  input: "^resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_22/bottleneck_v1/conv3/weights/Assign"
  input: "^resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_23/bottleneck_v1/conv1/weights/Assign"
  input: "^resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_23/bottleneck_v1/conv2/weights/Assign"
  input: "^resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_23/bottleneck_v1/conv3/weights/Assign"
  input: "^resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_3/bottleneck_v1/conv1/weights/Assign"
  input: "^resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_3/bottleneck_v1/conv2/weights/Assign"
  input: "^resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_3/bottleneck_v1/conv3/weights/Assign"
  input: "^resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_4/bottleneck_v1/conv1/weights/Assign"
  input: "^resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_4/bottleneck_v1/conv2/weights/Assign"
  input: "^resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_4/bottleneck_v1/conv3/weights/Assign"
  input: "^resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_5/bottleneck_v1/conv1/weights/Assign"
  input: "^resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_5/bottleneck_v1/conv2/weights/Assign"
  input: "^resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_5/bottleneck_v1/conv3/weights/Assign"
  input: "^resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_6/bottleneck_v1/conv1/weights/Assign"
  input: "^resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_6/bottleneck_v1/conv2/weights/Assign"
  input: "^resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_6/bottleneck_v1/conv3/weights/Assign"
  input: "^resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_7/bottleneck_v1/conv1/weights/Assign"
  input: "^resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_7/bottleneck_v1/conv2/weights/Assign"
  input: "^resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_7/bottleneck_v1/conv3/weights/Assign"
  input: "^resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_8/bottleneck_v1/conv1/weights/Assign"
  input: "^resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_8/bottleneck_v1/conv2/weights/Assign"
  input: "^resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_8/bottleneck_v1/conv3/weights/Assign"
  input: "^resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_9/bottleneck_v1/conv1/weights/Assign"
  input: "^resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_9/bottleneck_v1/conv2/weights/Assign"
  input: "^resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block3/unit_9/bottleneck_v1/conv3/weights/Assign"
  input: "^resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block4/unit_1/bottleneck_v1/conv1/weights/Assign"
  input: "^resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block4/unit_1/bottleneck_v1/conv2/weights/Assign"
  input: "^resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block4/unit_1/bottleneck_v1/conv3/weights/Assign"
  input: "^resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block4/unit_1/bottleneck_v1/shortcut/weights/Assign"
  input: "^resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block4/unit_2/bottleneck_v1/conv1/weights/Assign"
  input: "^resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block4/unit_2/bottleneck_v1/conv2/weights/Assign"
  input: "^resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block4/unit_2/bottleneck_v1/conv3/weights/Assign"
  input: "^resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block4/unit_3/bottleneck_v1/conv1/weights/Assign"
  input: "^resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block4/unit_3/bottleneck_v1/conv2/weights/Assign"
  input: "^resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/block4/unit_3/bottleneck_v1/conv3/weights/Assign"
  input: "^resnet_v1_101/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v1_101/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v1_101/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_101/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_101/conv1/weights/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
}
versions {
  producer: 808
}
